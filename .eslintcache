[{"E:\\react-study\\react-app\\src\\index.js":"1","E:\\react-study\\react-app\\src\\App.js":"2","E:\\react-study\\react-app\\src\\reportWebVitals.js":"3","E:\\react-study\\react-app\\src\\router\\react-router.tsx":"4","E:\\react-study\\react-app\\src\\utils\\ContextState.tsx":"5","E:\\react-study\\react-app\\src\\router\\router.tsx":"6","E:\\react-study\\react-app\\src\\router\\index.tsx":"7","E:\\react-study\\react-app\\src\\page\\text.tsx":"8","E:\\react-study\\react-app\\src\\store\\vueStore\\index.ts":"9","E:\\react-study\\react-app\\src\\page\\test2.tsx":"10","E:\\react-study\\react-app\\src\\store\\vueStore\\store.ts":"11","E:\\react-study\\react-app\\src\\page\\test3.tsx":"12","E:\\react-study\\react-app\\src\\utils\\hooks.tsx":"13","E:\\react-study\\react-app\\src\\store\\vuex\\index.ts":"14","E:\\react-study\\react-app\\src\\page\\test4.tsx":"15","E:\\react-study\\react-app\\src\\utils\\request.ts":"16","E:\\react-study\\react-app\\src\\page\\test5.tsx":"17","E:\\react-study\\react-app\\src\\page\\test6.tsx":"18","E:\\react-study\\react-app\\src\\router\\route.tsx":"19","E:\\react-study\\react-app\\src\\page\\testDoc.tsx":"20","E:\\react-study\\react-app\\src\\page\\demo\\index.tsx":"21","E:\\react-study\\react-app\\src\\page\\demo\\reinforc.tsx":"22","E:\\react-study\\react-app\\src\\page\\demo\\concrete.tsx":"23","E:\\react-study\\react-app\\src\\page\\demo\\mortar.tsx":"24","E:\\react-study\\react-app\\src\\page\\demo\\switch.tsx":"25","E:\\react-study\\react-app\\src\\page\\demo\\sleeve.tsx":"26","E:\\react-study\\react-app\\src\\page\\demo\\brick.tsx":"27","E:\\react-study\\react-app\\src\\page\\demo\\waterproof.tsx":"28","E:\\react-study\\react-app\\src\\page\\demo\\soil\\index.tsx":"29","E:\\react-study\\react-app\\src\\page\\demo\\soil\\dust.tsx":"30","E:\\react-study\\react-app\\src\\page\\demo\\soil\\plainSoil.tsx":"31","E:\\react-study\\react-app\\src\\page\\demo\\soil\\ringKnife.tsx":"32","E:\\react-study\\react-app\\src\\page\\demo\\query\\index.tsx":"33","E:\\react-study\\react-app\\src\\page\\demo\\setting\\index.tsx":"34","E:\\react-study\\react-app\\src\\page\\test\\index.tsx":"35","E:\\react-study\\react-app\\src\\page\\test\\principle.tsx":"36","E:\\react-study\\react-app\\src\\page\\demo\\hooks\\index.tsx":"37","E:\\react-study\\react-app\\src\\page\\demo\\component\\Modal.tsx":"38","E:\\react-study\\react-app\\src\\page\\demo\\component\\Descriptions.tsx":"39"},{"size":1427,"mtime":1611814593419,"results":"40","hashOfConfig":"41"},{"size":528,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":1752,"mtime":1611045267184,"results":"44","hashOfConfig":"41"},{"size":2070,"mtime":1611817020061,"results":"45","hashOfConfig":"41"},{"size":2632,"mtime":1611134590940,"results":"46","hashOfConfig":"41"},{"size":1289,"mtime":1611629567792,"results":"47","hashOfConfig":"41"},{"size":914,"mtime":1611727833589,"results":"48","hashOfConfig":"41"},{"size":1261,"mtime":1612339755039,"results":"49","hashOfConfig":"41"},{"size":571,"mtime":1611138488232,"results":"50","hashOfConfig":"41"},{"size":1094,"mtime":1611900416023,"results":"51","hashOfConfig":"41"},{"size":873,"mtime":1611735890119,"results":"52","hashOfConfig":"41"},{"size":6596,"mtime":1612247292118,"results":"53","hashOfConfig":"41"},{"size":358,"mtime":1611218636667,"results":"54","hashOfConfig":"41"},{"size":945,"mtime":1611736208514,"results":"55","hashOfConfig":"41"},{"size":739,"mtime":1611222686624,"results":"56","hashOfConfig":"41"},{"size":1690,"mtime":1611736500083,"results":"57","hashOfConfig":"41"},{"size":1790,"mtime":1612160086885,"results":"58","hashOfConfig":"41"},{"size":2382,"mtime":1612173389630,"results":"59","hashOfConfig":"41"},{"size":493,"mtime":1611803610339,"results":"60","hashOfConfig":"41"},{"size":1696,"mtime":1611819336137,"results":"61","hashOfConfig":"41"},{"size":2938,"mtime":1611823004734,"results":"62","hashOfConfig":"41"},{"size":6620,"mtime":1612324553851,"results":"63","hashOfConfig":"41"},{"size":2867,"mtime":1611823543642,"results":"64","hashOfConfig":"41"},{"size":4057,"mtime":1612324612304,"results":"65","hashOfConfig":"41"},{"size":3447,"mtime":1612332300885,"results":"66","hashOfConfig":"41"},{"size":7864,"mtime":1612349177310,"results":"67","hashOfConfig":"41"},{"size":4561,"mtime":1612324186514,"results":"68","hashOfConfig":"41"},{"size":1007,"mtime":1611826292533,"results":"69","hashOfConfig":"41"},{"size":2962,"mtime":1611825294547,"results":"70","hashOfConfig":"41"},{"size":3157,"mtime":1611826034546,"results":"71","hashOfConfig":"41"},{"size":3157,"mtime":1611826201032,"results":"72","hashOfConfig":"41"},{"size":9794,"mtime":1612422228640,"results":"73","hashOfConfig":"41"},{"size":4645,"mtime":1612165358984,"results":"74","hashOfConfig":"41"},{"size":1572,"mtime":1612170623036,"results":"75","hashOfConfig":"41"},{"size":2208,"mtime":1612245768864,"results":"76","hashOfConfig":"41"},{"size":2824,"mtime":1612339657240,"results":"77","hashOfConfig":"41"},{"size":796,"mtime":1612336456446,"results":"78","hashOfConfig":"41"},{"size":527,"mtime":1612336249447,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"21qtdk",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"E:\\react-study\\react-app\\src\\index.js",["186","187","188"],"import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalRouter } from './router/router';\nimport routers from './router';\nimport { store } from './store/vueStore/index';  // vue3.0 双向数据\nimport { Provider, ProviderDa, ProviderHash } from './utils/ContextState'; // 公共context 集\nimport State from \"../src/store/vuex/index\";\nimport route from \"./router/route\";\nimport Test from './page/text'; // 官方指定测试区域\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n      <HashRouter> {/* hash 路由*/}\n          <Suspense fallback={ <div>loading ......</div> }>\n              <ProviderDa value={ State }>\n                  <Provider value={ store }>\n                      {/*<GlobalRouter routerDate={ routers }>// 假路由 exe不适用*/}\n                      {/*    <Test/>*/}\n                      {/*</GlobalRouter>*/}\n                      <ProviderHash route={ route }></ProviderHash> {/* hash 路由*/}\n                  </Provider>\n              </ProviderDa>\n          </Suspense>\n      </HashRouter>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// const\n",["189","190"],"E:\\react-study\\react-app\\src\\App.js",[],"E:\\react-study\\react-app\\src\\reportWebVitals.js",[],"E:\\react-study\\react-app\\src\\router\\react-router.tsx",[],["191","192"],"E:\\react-study\\react-app\\src\\utils\\ContextState.tsx",[],"E:\\react-study\\react-app\\src\\router\\router.tsx",[],"E:\\react-study\\react-app\\src\\router\\index.tsx",[],"E:\\react-study\\react-app\\src\\page\\text.tsx",[],"E:\\react-study\\react-app\\src\\store\\vueStore\\index.ts",["193","194"],"import { reactive } from \"@vue/reactivity\";\r\n\r\n//测试 count ++\r\nconst changeCount = (): void => {\r\n    state.count += 1;\r\n}\r\n\r\n// 保存setting 数据\r\nfunction changeSetting<T>(states: T) {\r\n    console.log(states)\r\n    state.settingData = states;\r\n}\r\n\r\n// 添加表单数据\r\nfunction addTabelData<T>(states: T) {\r\n    console.log('------------------------------')\r\n    let data = JSON.parse(JSON.stringify(states));\r\n    state.tabelData.push(data);\r\n}\r\n\r\n// 添加选中表单数据\r\nfunction addCeckTabel<T>(states: T): void {\r\n    console.log('++++++++++++++++++++++++++++++++++')\r\n    console.log(states)\r\n    state.checkTabelData = states;\r\n}\r\n\r\n// vue3.0特性 + react 测试版 1.0.0\r\nexport interface State {\r\n    count: number,\r\n    settingData: any,\r\n    tabelData: any,\r\n    checkTabelData: any\r\n}\r\n\r\n// store 数据\r\nconst state: State = reactive({\r\n    count: 0,\r\n    settingData: JSON.parse(<string>localStorage.getItem('setData'))? JSON.parse(<string>localStorage.getItem('setData')): {},\r\n    tabelData: [],\r\n    checkTabelData: []\r\n});\r\n\r\n\r\n// 方法集\r\nexport const mutations = {\r\n    changeCount,\r\n    changeSetting,\r\n    addTabelData,\r\n    addCeckTabel\r\n}\r\n\r\n\r\nexport const store = {\r\n    state\r\n}\r\n\r\nexport type Store = typeof store;\r\n","E:\\react-study\\react-app\\src\\page\\test2.tsx",[],"E:\\react-study\\react-app\\src\\store\\vueStore\\store.ts",["195","196","197"],"import { useReducer, useRef, useEffect } from \"react\";\r\nimport { useGlobalState } from '../../utils/ContextState';\r\nimport {effect, ReactiveEffect, stop} from \"@vue/reactivity\";\r\nimport { useUpdate } from '../../utils/hooks';\r\n\r\ntype Selector<T, S> = (store: T) => S;\r\n//\r\nexport const useStore = (callback: any) => {\r\n    const store = useGlobalState();\r\n    console.log(store)\r\n    const updateTem = useUpdate();\r\n    const effectBack = effect( () =>\r\n        callback(store),\r\n        {\r\n            scheduler: job => {\r\n                if (job() === undefined) return;\r\n                updateTem();\r\n            },\r\n            lazy: true\r\n        }\r\n    );\r\n    console.log(effectBack());\r\n    return effectBack();\r\n}\r\n\r\n// 组件挂载后执行\r\nconst useEffectBack = (...param: Parameters<typeof effect>) => {\r\n    const data = useRef<ReactiveEffect>();\r\n    if (!data.current) {\r\n        data.current = effect(...param);\r\n    }\r\n\r\n    const stopEffect = () => {\r\n        stop(data.current!);\r\n    }\r\n\r\n    useEffect(() =>\r\n        stopEffect\r\n    , []);\r\n\r\n    return data.current;\r\n}\r\n","E:\\react-study\\react-app\\src\\page\\test3.tsx",["198"],"import React, { useReducer } from \"react\";\r\nimport { useWatch, useVuex } from '../utils/hooks';\r\n\r\n// 模拟wacth\r\nexport default () => {\r\n    const [state, setState] = useReducer((s: any) => s + 1 ,0);\r\n    const { val, oldVal } = useWatch(state, (val, oldVal) => {\r\n         console.log(val, oldVal);\r\n         return {\r\n             val,\r\n             oldVal\r\n         }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Aa></Aa>\r\n            <p>{ state } --- { val } { oldVal }</p>\r\n            <button onClick={() => { setState() }}> 点我 </button>\r\n            <div>我是测试3.0</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Aa = () => {\r\n    const { fun, state} = useVuex();\r\n\r\n    return (\r\n        <>\r\n            <p>{ state.count }</p>\r\n            <button onClick={() => {\r\n                fun.add()\r\n            }}>莫挨老子</button>\r\n        </>\r\n    );\r\n}\r\n","E:\\react-study\\react-app\\src\\utils\\hooks.tsx",["199","200","201","202","203","204","205","206","207","208","209","210"],"import {useEffect, useReducer, useRef, useState} from \"react\";\r\nimport {Store} from \"../store/vuex\";\r\nimport {useGlobalData} from \"./ContextState\";\r\nimport Docxtemplater from 'docxtemplater';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport JSZipUtils from 'jszip-utils';\r\n\r\n\r\ntype Callback<T> = (val: T | undefined, oldVal: T | undefined) => T;\r\n\r\n// 模拟观察者\r\nexport function useWatch<T>(da: T, callback: Callback<T> ) {\r\n    const data = useRef<T>();\r\n    useEffect(() => {\r\n        data.current = da;\r\n    })\r\n    return callback(da, data.current);\r\n}\r\n\r\n// 强制组件更新\r\nexport const useUpdate = () => {\r\n    const [,setCount] = useReducer(s => s + 1, 0);\r\n    return setCount;\r\n}\r\n\r\n\r\nconst reducer = (state: Store, action: Store): Store => {\r\n    state = action\r\n    return state\r\n}\r\n\r\n\r\n// Hooks context 共享数据\r\nexport const useVuex = () => {\r\n    const { store, useManage } = useGlobalData();\r\n    const [ state, setState ] = useReducer(reducer, store);\r\n\r\n    const changeDa = JSON.parse(JSON.stringify( state ));\r\n    return {\r\n        fun: useManage( changeDa, setState ),\r\n        state\r\n    }\r\n}\r\n\r\n\r\n// 生命周期 初始化\r\ntype Callbacks<T> = () => void;\r\nexport function useCreated<T>(callback: Callbacks<T>): void {\r\n    const [boolValue, setBoolValue] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if(boolValue) {\r\n            setBoolValue(false);\r\n            callback && callback();\r\n        }\r\n        setBoolValue(true);\r\n    })\r\n}\r\n\r\n\r\n// 生命周期 组件挂载 触发一次\r\nexport function useMount<T>(callback: Callbacks<T>): void {\r\n    useEffect(() => {\r\n        callback && callback();\r\n    },[])\r\n}\r\n\r\n\r\n// 生命周期 组件卸载 触发\r\nexport function useMounted<T>(callback: Callbacks<T>) {\r\n    useEffect(() => {\r\n        return () => callback && callback();\r\n    },[])\r\n}\r\n\r\n\r\n// 生命周期 组件依赖跟新\r\nexport function useUpdata<T>(depend: T, callback: Callbacks<T>): void {\r\n    const [boolValue, setBoolValue] = useState<boolean>(false);\r\n    const Depend = Array.isArray(depend) ? [...depend] : [depend];\r\n\r\n    useEffect(() => {\r\n        if(boolValue) {\r\n            setBoolValue(false);\r\n            callback && callback();\r\n        }\r\n        setBoolValue(true);\r\n    },Depend)\r\n}\r\n\r\n\r\n//模拟 ahooks useBoolean\r\ntype BooleanActions = {\r\n    toggle: (boo: boolean | undefined) => void,\r\n    setTrue: () => void,\r\n    setFalse: () => void,\r\n}\r\n\r\ntype BooleanBack = [\r\n    state: boolean,\r\n    BooleanActions: BooleanActions\r\n]\r\n\r\nexport function useBooleans(boo: boolean = false): BooleanBack {\r\n    const [state, setState] = useState<boolean>( boo );\r\n\r\n    const toggle = (value: boolean = state) => {\r\n        setState(value);\r\n    }\r\n\r\n    const setTrue = () => {\r\n        setState(true);\r\n    }\r\n\r\n    const setFalse = () => {\r\n        setState(false);\r\n    }\r\n\r\n    return [\r\n        state,\r\n        {\r\n            toggle,\r\n            setTrue,\r\n            setFalse,\r\n        }\r\n    ];\r\n}\r\n\r\n\r\n// 模拟 Ahooks useClickAway 管理目标元素外点击事件的 Hook。\r\ntype TargetArray = [\r\n    arr: string[],\r\n    fn?: () => void,\r\n] | any[]\r\nexport function useClickAways<T>(clickAway: MouseEvent | TouchEvent | any, target: string | string [], eventName?: string) {\r\n    const event = eventName || 'click';\r\n\r\n    useMount(() => {\r\n        document.addEventListener(event, clickAway);\r\n        console.log(target)\r\n        let Targets: TargetArray = Array.isArray(target) ? target : [target];\r\n        Targets[0].map((res: string) => {\r\n            let dom: any = document.getElementById(res);\r\n            dom.addEventListener(event, (e: any) => {\r\n                e.stopPropagation();\r\n            })\r\n        });\r\n    });\r\n\r\n    useMounted(() => {\r\n        document.removeEventListener<any>(event, clickAway);\r\n    });\r\n}\r\n\r\n\r\n// 导出World\r\nexport function useChangeDoc<T>() {\r\n    const [state, setState] = useState<boolean>(false); // 导出状态\r\n    // name 目标文件名称\r\n    // data 待替换字符串\r\n    const changeDoc = (name: string, data: T) => {\r\n        JSZipUtils.getBinaryContent(name, function(error: T, content: number[]) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            const zip = new PizZip(content);\r\n            const doc = new Docxtemplater();\r\n            doc.loadZip(zip);\r\n            doc.compile();\r\n            setState(false);\r\n            doc.resolveData(data).then(function () {\r\n                doc.render();\r\n                const out = doc.getZip().generate({\r\n                    type: \"blob\",\r\n                    mimeType: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n                });\r\n                saveAs(out, name);\r\n                setState(true);\r\n            })\r\n        });\r\n    }\r\n    return {state,  changeDoc};\r\n}\r\n\r\n// 获取当前时间\r\nexport function useGetTime(format: number = 1) {\r\n    let now = new Date();\r\n    let year: string | number = now.getFullYear(); //得到年份\r\n    let month: string | number = now.getMonth();//得到月份\r\n    let date: string | number = now.getDate();//得到日期\r\n    let hour: string | number = now.getHours();//得到小时\r\n    let minu: string | number = now.getMinutes();//得到分钟\r\n    let sec: string | number = now.getSeconds();//得到秒\r\n    month = month + 1;\r\n    if (month < 10) month = \"0\" + month;\r\n    if (date < 10) date = \"0\" + date;\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (minu < 10) minu = \"0\" + minu;\r\n    if (sec < 10) sec = \"0\" + sec;\r\n    let time = \"\";\r\n    //精确到天\r\n    if(format == 1){\r\n        time = year + \"-\" + month + \"-\" + date;\r\n    }\r\n    //精确到分\r\n    else if(format == 2){\r\n        time = year + \"-\" + month + \"-\" + date+ \" \" + hour + \":\" + minu + \":\" + sec;\r\n    }\r\n    return time;\r\n}\r\n\r\n\r\nexport function DateDiff(faultDate: string, completeTime: string): number{\r\n    let stime =new Date(faultDate).getTime();\r\n    let etime = new Date(completeTime).getTime();\r\n    let usedTime = etime - stime;  //两个时间戳相差的毫秒数\r\n    let days=Math.floor(usedTime/(24*3600*1000));\r\n    //计算出小时数\r\n    let leave1=usedTime%(24*3600*1000);    //计算天数后剩余的毫秒数\r\n    let hours=Math.floor(leave1/(3600*1000));\r\n    //计算相差分钟数\r\n    let leave2=leave1%(3600*1000);        //计算小时数后剩余的毫秒数\r\n    let minutes=Math.floor(leave2/(60*1000));\r\n    // let time = days + \"天\"+hours+\"时\"+minutes+\"分\";\r\n    let time = days;\r\n    return time;\r\n}\r\n","E:\\react-study\\react-app\\src\\store\\vuex\\index.ts",["211"],"const store: any = {}\r\n\r\nexport type Store = typeof store;\r\n\r\nexport const useManage = (state: Store, setState: any) => {\r\n    /**\r\n     * 测试组件Context共享数据\r\n     * */\r\n    const add = () => {\r\n        state.count += 1;\r\n        setState(state);\r\n    }\r\n\r\n    return {\r\n        add\r\n    }\r\n}\r\n\r\nexport default {\r\n    store,\r\n    useManage\r\n};\r\n","E:\\react-study\\react-app\\src\\page\\test4.tsx",["212"],"import React, {memo, useEffect, useState} from \"react\";\r\nimport axios from \"../utils/request\";\r\n\r\ntype Todo = {\r\n    id: number,\r\n    name: string,\r\n    done?: boolean\r\n};\r\n\r\ntype Todos = Todo[];\r\n\r\nconst Test4 = () => {\r\n    // @ts-ignore\r\n    const [todo, setTodo] = useState<Todo>({name: '', id: 0});\r\n    // @ts-ignore\r\n    const [, setTodos] = useState <Todos>([]);\r\n\r\n    const refreshTodos = () => {\r\n        // 这边必须手动声明axios的返回类型。\r\n        axios.get<Todos>( \"/index.json\").then(res => {\r\n            console.log(res)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshTodos();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => {setTodo({\r\n                id: 12312,\r\n                name: 'caomingrui'\r\n            })}}>莫挨老子</button>\r\n            <p>{ todo.name }</p>\r\n            <p>我是测试4.0</p>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default memo(Test4);\r\n","E:\\react-study\\react-app\\src\\utils\\request.ts",["213"],"import axios from 'axios';\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n\r\nconst createType = {\r\n    // axios 请求 公共区域\r\n    baseURL: process.env.REACT_APP_BASE_API,\r\n    //超时\r\n    timeout: 1000\r\n}\r\n\r\n/**\r\n * 创建axios实例\r\n * */\r\nconst service = axios.create( createType );\r\n\r\n/**\r\n * 请求拦截器\r\n * */\r\nservice.interceptors.request.use( config => {\r\n    return config;\r\n\r\n}, error => {\r\n    Promise.reject((error))\r\n});\r\n\r\n/**\r\n * 响应拦截器\r\n * */\r\nservice.interceptors.response.use( res => {\r\n    const response = res.data;\r\n    return response;\r\n\r\n}, error => {\r\n    console.log('err' + error) // for debug\r\n    return Promise.reject(error)\r\n})\r\n\r\nservice = <T>(url: Url, payload?: any): Promise<T> | never => {\r\n\r\n    return Promise.resolve(data as any)\r\n}\r\n\r\nexport default service;\r\n","E:\\react-study\\react-app\\src\\page\\test5.tsx",[],"E:\\react-study\\react-app\\src\\page\\test6.tsx",["214","215","216"],"import React, { memo } from \"react\";\r\nimport { useCreated } from \"../utils/hooks\";\r\nimport * as Rx from 'rxjs'\r\nimport { of, from, fromEvent } from 'rxjs';\r\n// import Observable from 'rxjs/Observable';\r\n// import 'rxjs/add/observable/fromPromise';\r\n\r\n// 入门Rxjs\r\nconst Test6 = () => {\r\n\r\n    useCreated(() => {\r\n        // const obs = of('foo', 'bar'); // 一个或多值\r\n        // const obs = from([1, 2, 3]); // 数组\r\n        // @ts-ignore\r\n        // const obs = fromEvent(document.querySelector('button'), 'click'); // 事件\r\n\r\n        // const obs = Observable.fromPromise((res) => res(1));\r\n        // console.log(obs);\r\n        // obs.subscribe((val: any) => console.log(val), (err: any) => console.log(err), () => console.log('end'))\r\n\r\n        // 外部产生新事物\r\n        // let myObserv = new Rx.Subject();\r\n        // myObserv.subscribe(val => console.log(val));\r\n        // myObserv.next('foo');\r\n\r\n        // 内部产生新事物\r\n        // let myObserv = Rx.Observable.create(observer => {\r\n        //     observer.next('foo');\r\n        //     observer.next('car');\r\n        //     setTimeout(() => observer.next(123123), 1000);\r\n        // });\r\n        // myObserv.subscribe((val: any) => console.log(val));\r\n\r\n        const obs: any = fromEvent(document.querySelector('button'), 'input'); // 事件\r\n        console.log(obs)\r\n        // 过滤掉小于3个字符长度的目标值\r\n        // obs.filter((event: any) => event.target.value.length > 2)\r\n        //     .map((event: any) => event.target.value)\r\n        //     .subscribe((value: any) => console.log(value)); // \"hel\"\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <input className='button'/>\r\n         <p>我是测试test6 -- Rxjs</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(Test6);\r\n","E:\\react-study\\react-app\\src\\router\\route.tsx",[],"E:\\react-study\\react-app\\src\\page\\testDoc.tsx",["217","218"],"import React, {memo, useState} from \"react\";\r\nimport { useChangeDoc } from '../utils/hooks';\r\n\r\nconst TestDoc = () => {\r\n    const {state,  changeDoc} = useChangeDoc();\r\n\r\n    function changeName() {\r\n        changeDoc('a.docx', {name: 'rui'});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={changeName}>测试</button>\r\n            <p>{state==false?'false': 'true'}</p>\r\n            <p>我是测试test6 -- Rxjs</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(TestDoc);\r\n",["219","220"],"E:\\react-study\\react-app\\src\\page\\demo\\index.tsx",[],"E:\\react-study\\react-app\\src\\page\\demo\\reinforc.tsx",["221","222","223","224"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport { useCreated, useGetTime } from \"../../utils/hooks\";\r\nimport moment from 'moment'\r\n\r\n// 钢筋原料\r\nconst Reinforc = () => {\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n        );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            钢筋原料\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'b'} label=\"批号\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"厂家\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"重量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"重量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Reinforc);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\concrete.tsx",["225","226","227","228","229","230","231","232","233","234","235"],"import React, {memo, useRef, useState} from \"react\";\r\nimport {Select, Button, Form, Input, DatePicker, message} from 'antd';\r\nimport {useCreated, useGetTime, DateDiff, useChangeDoc} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\nimport {useStore} from \"../../store/vueStore/store\";\r\nimport {Store, mutations} from \"../../store/vueStore\";\r\n\r\n// concrete 混泥土\r\nconst Concrete = () => {\r\n\r\n    const formTab: any = useRef(null);\r\n    const {state,  changeDoc} = useChangeDoc();\r\n    const [BooleanVal, setBooleanVal] = useState<boolean>(false); // test显示\r\n    const time = useGetTime();\r\n    const data = useStore((store: Store) => {\r\n        const { state } = store;\r\n        const { settingData } = state;\r\n        return {\r\n            settingData\r\n        }\r\n    });\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            formTab.current.setFieldsValue({time: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const calculationGroup = (e: any) => {\r\n        let number = e.target.value;\r\n        const maintenance = formTab.current.getFieldValue(\"maintenance\");\r\n        let group;\r\n        if (maintenance == 0) {\r\n            group = parseInt(number)/100;\r\n        }\r\n        else if (maintenance == 1) {\r\n            group = parseInt(number)/2000;\r\n        }\r\n        else {\r\n            group = '/';\r\n        }\r\n        formTab.current.setFieldsValue({groupNum: group})\r\n    }\r\n\r\n    const onFinish = (values: any) => {\r\n        const maintenance = formTab.current.getFieldValue(\"maintenance\");\r\n        let sampleName;\r\n        if (maintenance == 0 || maintenance == 1) {\r\n            sampleName = \"混凝土抗压试块\";\r\n        }\r\n        else {\r\n            sampleName = \"拆模混凝土抗压试块\";\r\n        }\r\n        const da: any = {};\r\n        da.experimentalDate = moment(values.experimentalDate).format('YYYY-MM-DD')\r\n        da.time = moment(values.time).format('YYYY-MM-DD')\r\n        da.period = DateDiff(da.time, da.experimentalDate);\r\n        da.batch = values.batch + 'm³';\r\n        da.groupNum = values.groupNum + '组';\r\n        da.key = \"concrete\";\r\n        da.maintenance = values.maintenance == 0?'标准养护': values.maintenance == 1?'同条件养护': '拆模同条件养护';\r\n        da.strength = values.strength + '100*100*100'\r\n        let testDa = Object.assign(data.settingData, values, {sampleName: sampleName}, da);\r\n        if (BooleanVal) {\r\n            changeDoc('concrete.docx', testDa);\r\n        }\r\n        else {\r\n            mutations.addTabelData(testDa);\r\n            message.success('提交成功');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            concrete 混泥土 --- 实验日期提醒\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" initialValues={{'supplyMarket': '厂家', 'manufacturer': data.settingData.manufacturer}}\r\n                  onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'strength'} label=\"强度\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        {\r\n                            strengthList.map(res => {\r\n                                return (\r\n                                    <Select.Option value={ res.val } key={ res.key }>{ res.val }</Select.Option>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'maintenance'} label=\"养护\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"0\">标准养护</Select.Option>\r\n                        <Select.Option value=\"1\">同条件养护</Select.Option>\r\n                        <Select.Option value=\"2\">拆模同条件养护</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'manufacturer'} label=\"厂家\" rules={[{ required: true }]}>\r\n                    <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item name={'supplyMarket'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item name={'time'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'useParts'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'experimentalDate'} label=\"试验日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'batch'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input onInput={calculationGroup} onClick={calculationGroup}/>\r\n                </Form.Item>\r\n                <Form.Item name={'groupNum'} label=\"组数\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n            <button onClick={() => {setBooleanVal(true);message.success('开启成功');}}>测试 doc open</button>\r\n            <button onClick={() => {setBooleanVal(false);message.success('关闭成功');}}>测试 doc close</button>\r\n        </>\r\n    );\r\n}\r\n\r\n// 强度\r\n\r\ntype StrengthList = {\r\n    key: string,\r\n    val: string\r\n}\r\nconst strengthList: StrengthList[] = [\r\n    {key: 'C15', val: 'C15'},\r\n    {key: 'C20', val: 'C25'},\r\n    {key: 'C35', val: 'C30'},\r\n    {key: 'C40', val: 'C45'},\r\n    {key: 'C50', val: 'C50'},\r\n    {key: 'C55', val: 'C55'},\r\n    {key: 'C60', val: 'C60'},\r\n    {key: 'C65', val: 'C65'},\r\n    {key: 'C70', val: 'C70'},\r\n    {key: 'C75', val: 'C75'},\r\n    {key: 'C80', val: 'C80'},\r\n    {key: 'P4', val: 'P4'},\r\n    {key: 'P6', val: 'P6'},\r\n    {key: 'P8', val: 'P8'},\r\n    {key: 'P10', val: 'P10'},\r\n    {key: 'P12', val: 'P12'},\r\n];\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Concrete);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\mortar.tsx",["236","237","238","239","240"],"import React, {memo, useRef} from \"react\";\r\nimport {Button, DatePicker, Form, Input, Select} from \"antd\";\r\nimport {useCreated, useGetTime} from \"../../utils/hooks\";\r\n\r\n// mortar 砂浆\r\nconst Mortar = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            mortar 砂浆 --- 实验日期提醒\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"强度\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"厂家\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"实验日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"养护\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">标准养护</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Mortar);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\switch.tsx",["241","242","243"],"import React, {memo, useRef, useState} from \"react\";\r\nimport {Select, Button, Form, Input, DatePicker, message} from 'antd';\r\nimport {useBooleans, useChangeDoc, useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\nimport {mutations, Store} from \"../../store/vueStore\";\r\nimport {useStore} from \"../../store/vueStore/store\";\r\n\r\n// 等级列表\r\nconst level: string[] = ['HPB235', 'HPB300', 'HRB335', 'HRB335E', 'HRB400', 'HRB400E', 'HRB500', 'HRB500E'];\r\n\r\n// 规格\r\nconst size: number[] = [12, 14, 16, 18, 20];\r\n\r\n// switch 电渣压力焊 -- ok\r\nconst Switch = () => {\r\n\r\n    const formTab: any = useRef(null);\r\n    const [BooleanVal, setBooleanVal] = useState<boolean>(false); // test显示\r\n    const {state,  changeDoc} = useChangeDoc();\r\n    const time = useGetTime();\r\n    const data = useStore((store: Store) => {\r\n        const { settingData } = store.state;\r\n        return {\r\n            settingData\r\n        }\r\n    });\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            formTab.current.setFieldsValue({time: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        let da: typeof values = {};\r\n        da.time = moment(values.time).format('YYYY-MM-DD');\r\n        da.key = \"switch\";\r\n        da.sampleName = \"电渣压力焊\";\r\n        da.type = values.level + values.size;\r\n        let testDa = Object.assign(data.settingData, values, da);\r\n        if (BooleanVal) {\r\n            changeDoc('switch.docx', testDa);\r\n        }\r\n        else {\r\n            mutations.addTabelData(testDa);\r\n            message.success('提交成功');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            switch 电渣压力焊\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}\r\n                  initialValues={{'groupNum': '1组'}}>\r\n                <Form.Item name={'level'} label=\"等级\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        {\r\n                            level.map(res =>\r\n                                <Select.Option value={ res } key={ res }>{ res }</Select.Option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'size'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        {\r\n                            size.map(res =>\r\n                                <Select.Option value={ res } key={ res }>{ res }</Select.Option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'useParts'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item name={'groupNum'} label=\"组数\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'batch'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'time'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <button onClick={() => {setBooleanVal(true);message.success('开启成功');}}>测试 doc open</button>\r\n            <button onClick={() => {setBooleanVal(false);message.success('关闭成功');}}>测试 doc close</button>\r\n        </>\r\n    )\r\n};\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!'\r\n};\r\n\r\nexport default memo(Switch);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\sleeve.tsx",["244","245"],"import React, {memo, useRef} from \"react\";\r\nimport {Select, Button, Form, Input, DatePicker, message} from 'antd';\r\nimport { useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport { useSleeve } from \"./hooks/index\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// 等级\r\nconst Level = ['HPB235', 'HPB300', 'HRB335', 'HRB335E', 'HRB400', 'HRB400E', 'HRB500', 'HRB500E'];\r\n\r\n// sleeve  直螺纹套筒\r\nconst Sleeve = () => {\r\n\r\n    const formTab: any = useRef(null);\r\n    const time = useGetTime();\r\n    const {state, perform, setBooleanVal} = useSleeve();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            formTab.current.setFieldsValue({time: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        perform(values);\r\n    };\r\n\r\n    const creatGroupNum = (e: any) => {\r\n        const num = e.target.value/500;\r\n        formTab.current.setFieldsValue({groupNum: num});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            sleeve  直螺纹套筒\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} >\r\n                <Form.Item name={'level'} label=\"等级\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        {\r\n                            Level.map(res =>\r\n                                <Select.Option value={res} key={res}>{ res }</Select.Option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'specification'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"22\">22</Select.Option>\r\n                        <Select.Option value=\"25\">25</Select.Option>\r\n                        <Select.Option value=\"28\">28</Select.Option>\r\n                        <Select.Option value=\"32\">32</Select.Option>\r\n                        <Select.Option value=\"35\">35</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'useParts'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item name={'groupNum'} label=\"组数\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'batch'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input onClick={creatGroupNum} onInput={creatGroupNum}/>\r\n                </Form.Item>\r\n                <Form.Item name={'time'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <button onClick={() => {setBooleanVal(true);message.success('开启成功');}}>测试 doc open</button>\r\n            <button onClick={() => {setBooleanVal(false);message.success('关闭成功');}}>测试 doc close</button>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = { required: '${label} is required!' };\r\n\r\nexport default memo(Sleeve);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\brick.tsx",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264"],"import React, {memo, useRef, useState} from \"react\";\r\nimport {Select, Button, Form, Input, DatePicker, message} from 'antd';\r\nimport {useChangeDoc, useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\nimport {useStore} from \"../../store/vueStore/store\";\r\nimport {mutations, Store} from \"../../store/vueStore\";\r\n\r\n// 名称类别\r\nconst category: string[] = [\"烧结砖空心砖\", \"烧结多孔砖\", \"烧结普通砖\",\r\n    \"承重混凝土多孔砖\", \"混凝土普通砖\", \"混凝土实心砖\", \"蒸汽加压混凝土砌块\", \"普通混凝土小型空心砌块\"];\r\n\r\ntype ConcreteData = {\r\n    time: string,\r\n    samplingDate: string,\r\n    monitor: string,\r\n    accordingTo: string,\r\n    sampleName: string,\r\n    type: string,\r\n    keyName: string,\r\n    key: string\r\n}\r\n\r\n// brick 砖\r\nconst Concrete = () => {\r\n    const [ levelIntensity, setLevelIntensity ] = useState<string[]>([]);// 等级\r\n\r\n    const formTab: any = useRef(null);\r\n    const time = useGetTime();\r\n    const times = useGetTime(2);\r\n    const {state,  changeDoc} = useChangeDoc();\r\n    const [BooleanVal, setBooleanVal] = useState<boolean>(false); // test显示\r\n    const data = useStore((store: Store) => {\r\n        const { state } = store;\r\n        const { settingData } = state;\r\n        return {\r\n            settingData\r\n        }\r\n    });\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            formTab.current.setFieldsValue({time: moment(time)});\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n        let da: Partial<ConcreteData> = {};\r\n        da.time = moment(values.time).format('YYYY-MM-DD');\r\n        da.samplingDate = moment(values.samplingDate).format('YYYY-MM-DD');\r\n        da.monitor = values.category == \"蒸汽加压混凝土砌块\"?\"抗压强度、干密度\": \"抗压强度\";\r\n        da.accordingTo = getAccordingTo(values.category);\r\n        da.sampleName = values.category;\r\n        da.type = values.strength + values.spec;\r\n        da.keyName = \"brick\";\r\n        da.key = \"brick\" + times;\r\n        let testDa = Object.assign(data.settingData, values,  da);\r\n        if (BooleanVal) {\r\n            changeDoc('brick.docx', testDa);\r\n        }\r\n        else {\r\n            mutations.addTabelData(testDa);\r\n            message.success('提交成功');\r\n        }\r\n    };\r\n\r\n    // 获取检验依据\r\n    const getAccordingTo = (values: string): string | undefined => {\r\n        let accordingTo;\r\n        if (values == '烧结空心砖') {\r\n            accordingTo = \"GB 13545-2014\";\r\n        }\r\n        else if (values == '称重混凝土多孔砖') {\r\n            accordingTo = \"GB 25779-2010\";\r\n        }\r\n        else if (values == '混凝土普通砖') {\r\n            accordingTo = \"NY/T 671-2003\";\r\n        }\r\n        else if (values == '混凝土实心砖') {\r\n            accordingTo = \"GB/T 21144-2007\";\r\n        }\r\n        else if (values == '烧结多孔砖') {\r\n            accordingTo = \"GB 13544-2011\";\r\n        }\r\n        else if (values == '烧结普通砖') {\r\n            accordingTo = \"GB/T 5101-2017\";\r\n        }\r\n        else if (values == '蒸汽加压混凝土砌块') {\r\n            accordingTo = \"GB 11968-2006\";\r\n        }\r\n        else if (values == '普通混凝土小型空心砌块') {\r\n            accordingTo = \"GB/T 8239-2014\";\r\n        }\r\n        return accordingTo;\r\n    }\r\n\r\n    const categoryCheck = () => {\r\n        const value: string = formTab.current.getFieldValue(\"category\");\r\n        formTab.current.setFieldsValue({spec: ''});\r\n        if (value != undefined) {\r\n            setLevelIntensity([]);\r\n            if (value == \"烧结砖空心砖\") {\r\n                setLevelIntensity(['MU3.5', 'MU5.0', 'MU7.5', 'MU10']);\r\n            }\r\n            else if (value == \"烧结多孔砖\" || value == \"烧结普通砖\") {\r\n                setLevelIntensity(['MU10', 'MU15', 'MU20', 'MU25', 'MU30']);\r\n            }\r\n            else if (value == \"承重混凝土多孔砖\" || value == \"混凝土普通砖\" || value == \"混凝土实心砖\") {\r\n                setLevelIntensity(['MU15', 'MU20', 'MU25']);\r\n            }\r\n            else if (value == \"蒸汽加压混凝土砌块\") {\r\n                setLevelIntensity(['A1.0', 'A2.0', 'A2.5', 'A3.5', 'A5.0', 'A7.5', 'A10.0','等级为B03', 'B04', 'B05', 'B06', 'B07','B08']);\r\n            }\r\n            else {\r\n                setLevelIntensity(['MU3.5', 'MU5.0', 'MU7.5', 'MU10.0', 'MU15.0', 'MU20.0']);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            brick 砖\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}\r\n                  initialValues={{'supplyMarket': '厂家', 'manufacturer': data.settingData.manufacturer, \"batch\": \"1万块\", \"groupNum\": \"10块\",\r\n                      \"category\": \"123\", \"strength\": 'asd', \"spec\": '0000', \"useParts\": '123123'\r\n                  }}>\r\n                <Form.Item name={'category'} label=\"类别\" rules={[{ required: true }]}>\r\n                    <Select onClick={ categoryCheck }>\r\n                        {\r\n                            category.map(res =>\r\n                                <Select.Option value={ res } key={ res }>{ res }</Select.Option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'strength'} label=\"强度\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        {\r\n                            levelIntensity.map(res =>\r\n                                <Select.Option value={ res } key={ res }>{ res }</Select.Option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'spec'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'manufacturer'} label=\"生产场地\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'supplyMarket'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'time'} label=\"进场日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'useParts'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'batch'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item name={'groupNum'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'samplingDate'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <button onClick={() => {setBooleanVal(true);message.success('开启成功');}}>测试 doc open</button>\r\n            <button onClick={() => {setBooleanVal(false);message.success('关闭成功');}}>测试 doc close</button>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!'\r\n};\r\n\r\nexport default memo(Concrete);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\waterproof.tsx",["265","266"],"import React, {memo, useRef, useState} from \"react\";\r\nimport {Select, Button, Form, Input, DatePicker, message} from 'antd';\r\nimport {useChangeDoc, useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\nimport {useStore} from \"../../store/vueStore/store\";\r\nimport {Store, mutations} from \"../../store/vueStore\";\r\n\r\nconst rankList: string[] = ['SBS Ⅰ PY PE PE 3 10', 'SBS Ⅱ PY PE PE 3 10', 'SBS Ⅱ PY PE PE 4 10', 'SBS Ⅱ PY PE PE 4 10'];\r\n\r\n// waterproof 防水卷材 -- ok\r\nconst Waterproof = () => {\r\n\r\n    const formTab: any = useRef(null);\r\n    const time = useGetTime();\r\n    const [BooleanVal, setBooleanVal] = useState<boolean>(false); // test显示\r\n    const {state,  changeDoc} = useChangeDoc();\r\n    const data = useStore((store: Store) => {\r\n        const { state } = store;\r\n        const { settingData, tabelData } = state;\r\n        return {\r\n            settingData,\r\n            tabelData\r\n        }\r\n    });\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            formTab.current.setFieldsValue({time: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n        let da: typeof values = {};\r\n        da.time = moment(values.time).format('YYYY-MM-DD');\r\n        da.samplingDate = moment(values.samplingDate).format('YYYY-MM-DD');\r\n        da.key = \"waterproof\";\r\n        da.sampleName = \"弹性体改性沥青防水卷材\";\r\n        let testDa = Object.assign(data.settingData, values, da);\r\n        if (BooleanVal) {\r\n            changeDoc('waterproof.docx', testDa);\r\n        }\r\n        else {\r\n            mutations.addTabelData(testDa);\r\n            message.success('提交成功');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            waterproof 防水卷材\r\n            { data.tabelData.length }\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}\r\n                  initialValues={{'supplyMarket': '厂家', 'manufacturer': data.settingData.manufacturer, \"groupNum\": \"1.5㎡\"}}>\r\n                <Form.Item name={'type'} label=\"规格型号等级\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        {\r\n                            rankList.map((res, index) =>\r\n                                <Select.Option value={res} key={index}>{ res }</Select.Option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'factoryNum'} label=\"出厂编号\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'manufacturer'} label=\"生产厂家\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'supplyMarket'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'time'} label=\"进场日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'useParts'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'batch'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'groupNum'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'samplingDate'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <button onClick={() => {setBooleanVal(true);message.success('开启成功');}}>测试 doc open</button>\r\n            <button onClick={() => {setBooleanVal(false);message.success('关闭成功');}}>测试 doc close</button>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!'\r\n};\r\n\r\nexport default memo(Waterproof);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\index.tsx",["267"],"import React, {memo, useState} from 'react';\r\nimport Dust from \"./dust\";\r\nimport PlainSoil from \"./plainSoil\";\r\nimport RingKnife from \"./ringKnife\";\r\nimport { Button } from 'antd';\r\n\r\nexport default memo(() => {\r\n    const [state, setState] = useState<number>(0);\r\n\r\n    const Render = () => {\r\n        if (state === 0) {\r\n            return <Dust/>\r\n        }\r\n        else if (state === 1) {\r\n            return <PlainSoil/>\r\n        }\r\n        else if (state == 2) {\r\n            return <RingKnife/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n         我是土爸爸\r\n            <p>\r\n                <Button type={state===0?'primary': 'default'} onClick={()=>setState(0)}>灰土</Button>\r\n                <Button type={state===1?'primary': 'default'} onClick={()=>setState(1)}>素土</Button>\r\n                <Button type={state===2?'primary': 'default'} onClick={()=>setState(2)}>环刀</Button>\r\n            </p>\r\n            {\r\n                Render()\r\n            }\r\n        </>\r\n    );\r\n})\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\dust.tsx",["268","269","270","271"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport { useCreated, useGetTime } from \"../../../utils/hooks\";\r\nimport moment from 'moment'\r\n\r\n// 灰土\r\nconst Dust = () => {\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            灰土 Dust\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'h'} label=\"规格型号\" rules={[{ required: true }]}>\r\n                    <Input disabled value='/'/>\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"出厂编号\" rules={[{ required: true }]}>\r\n                    <Input disabled value='/'/>\r\n                </Form.Item>\r\n                <Form.Item name={'a'} label=\"生产厂家\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'b'} label=\"供销单位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"进厂日期\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'b'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input disabled value='100'/>\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled value='/'/>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Dust);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\plainSoil.tsx",["272","273","274","275"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// PlainSoil 素土\r\nconst PlainSoil = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            PlainSoil 素土\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'f'} label=\"干密度\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"含水率\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'a'} label=\"体积\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={['a', 'b', 'c']} label=\"层数厚度标高\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                    <Input />\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"使用机械\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"系数\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(PlainSoil);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\ringKnife.tsx",["276","277","278","279"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// ringKnife 环刀\r\nconst RingKnife = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            ringKnife 环刀\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'f'} label=\"干密度\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"含水率\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'a'} label=\"体积\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={['a', 'b', 'c']} label=\"层数厚度标高\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                    <Input />\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"使用机械\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"系数\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(RingKnife);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\query\\index.tsx",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"E:\\react-study\\react-app\\src\\page\\demo\\setting\\index.tsx",["299","300","301","302","303","304"],"import React, {memo, useRef, useState} from \"react\";\r\nimport {Button, DatePicker, Form, Input, message} from \"antd\";\r\nimport {useCreated, useUpdata, useMount} from \"../../../utils/hooks\";\r\nimport {useStore} from \"../../../store/vueStore/store\";\r\nimport {Store, mutations} from \"../../../store/vueStore\";\r\n\r\nconst Setting = () => {\r\n        const formTab = useRef(null);\r\n        const [localData, localSetData] = useState<string | null>(null);\r\n\r\n        const data = useStore((store: Store) => {\r\n            const { state } = store;\r\n            const { settingData } = state;\r\n            return {\r\n                settingData\r\n            }\r\n        });\r\n\r\n        useCreated(() => {\r\n            if (formTab != null) {\r\n                const localStorageData: string | null = localStorage.getItem('setData');\r\n                // @ts-ignore\r\n                formTab.current.setFieldsValue(JSON.parse(localStorageData));\r\n                localSetData(localStorageData);\r\n            }\r\n        });\r\n\r\n        useUpdata(localData, () => {\r\n            if (formTab != null) {\r\n                if (localData !== null) {\r\n                    if (typeof localData === \"string\") {\r\n                        mutations.changeSetting(JSON.parse(localData));\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        // 提交表单\r\n        const onFinish = (values: any) => {\r\n            mutations.changeSetting(values);\r\n            localStorage.setItem('setData', JSON.stringify(values));\r\n            message.success('修改成功');\r\n        };\r\n\r\n        return (\r\n            <>\r\n                设置公共区域 --\r\n                { data.settingData.buildUnit } --\r\n                <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                    <Form.Item name={'buildUnit'} label=\"建设单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'projectName'} label=\"工程名称\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'entrustUnit'} label=\"委托单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'monitorUnit'} label=\"监测单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'constructionUnit'} label=\"施工单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'supervisionUnit'} label=\"监理单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'peopleDirect'} label=\"送样人\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'operator'} label=\"试验员\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'qualifiedNum'} label=\"考核合格证号\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'manufacturer'} label=\"生产厂家\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'contentIs'} label=\"内容和对情况\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'witnessPerson'} label=\"见证人员\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default memo(Setting);\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 12 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n","E:\\react-study\\react-app\\src\\page\\test\\index.tsx",["305","306"],"import React, {memo, ReactComponentElement, ReactDOM, useState,} from \"react\";\r\n\r\nconst Test = () => {\r\n\r\n    return (\r\n        <>\r\n            { useTestHocChild(useTestHoc(Test2))() }\r\n            { useTestHocChild(Test2)() }\r\n            <div>我是测试</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Test2 = ({state, setState, testInput, val}: any) => {\r\n    return (\r\n        <>\r\n            <p>{ state===false?'false': 'true' }</p>\r\n            <button onClick={()=>{\r\n                setState(false);}}>点我false</button>\r\n            <button onClick={()=>{\r\n                setState(true)}}>点我true</button>\r\n            { val }\r\n            <input type=\"text\" onInput={testInput} value={val}/>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n// Hoc 模式\r\nfunction useTestHoc(WrappedComponent: any) {\r\n    const useA = (props: any) => {\r\n        console.log(props)\r\n        const [state, setState] = useState<boolean>(false);\r\n        const newProps = {\r\n            state,\r\n            setState,\r\n            ...props\r\n        }\r\n\r\n        return  <WrappedComponent {...newProps}/>\r\n\r\n    }\r\n    return useA;\r\n}\r\n\r\nfunction useTestHocChild(Component: any) {\r\n    console.log(Component)\r\n    const useB = () => {\r\n        const [val, setValue] = useState<number | string>();\r\n        // console.log(props)\r\n        function testInput(e: any) {\r\n            setValue(e.target.value);\r\n        }\r\n\r\n        const newState ={\r\n            val,\r\n            testInput\r\n        }\r\n\r\n        return <Component {...newState} />\r\n    }\r\n\r\n    return useB;\r\n}\r\n\r\nexport default memo(Test);\r\n","E:\\react-study\\react-app\\src\\page\\test\\principle.tsx",["307","308","309","310","311","312","313","314","315"],"import React, {Attributes, ComponentClass, FunctionComponent, memo, ReactElement, ReactNode} from \"react\";\r\nimport {useCreated, useMount} from \"../../utils/hooks\";\r\nimport { Renderer } from 'react-dom';\r\n\r\nconst RenderPrinciple = () => {\r\n    // console.log(React.createElement('a', null, 'asdasd'))\r\n\r\n    useMount(() => {\r\n        renderElement(A(), document.getElementById(\"test\"));\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div>father</div>\r\n            <p>childern</p>\r\n            <div id=\"test\">\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst A = () => {\r\n\r\n    const clickTest = () => {\r\n        console.log('我被点击了')\r\n    }\r\n\r\n    const blurTest = () => {\r\n        console.log('我失去焦点了')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>我是p</p>\r\n            <span>我是span</span>\r\n            <button onClick={clickTest} onBlur={blurTest}>莫挨老子</button>\r\n            {/*{*/}\r\n            {/*    React.createElement()*/}\r\n            {/*}*/}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction renderElement<T>(vnode: any, root: any) {\r\n    console.log(vnode)\r\n    console.log(vnode.constructor)\r\n    console.log(vnode.type)\r\n    let element: any;\r\n    if (vnode.constructor !== Object) { // 非标签处理\r\n        element = document.createTextNode(vnode);\r\n    }\r\n    else { // 标签处理\r\n        element = document.createElement(vnode.type);\r\n\r\n        Object.keys(vnode.props).map(res => { // 遍历节点props\r\n            if (res === 'children') {\r\n                if (vnode.props.children.constructor !== Array) { // 不存在子节点\r\n                    element.innerHTML = vnode.props.children;\r\n                }\r\n                else { // 存在递归\r\n                    vnode.props.children.map((res: Renderer )=> {\r\n                        renderElement(res, root);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                const eventType = res.slice(2, res.length).toLowerCase(); // 分割事件\r\n                element.addEventListener(eventType, vnode.props[res]); // 绑定事件\r\n            }\r\n        });\r\n    }\r\n    root.appendChild(element);\r\n}\r\n\r\nexport default memo(RenderPrinciple);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\hooks\\index.tsx",["316","317","318","319"],"import moment from \"_moment@2.29.1@moment\";\r\nimport {useChangeDoc, useGetTime} from \"../../../utils/hooks\";\r\nimport {useStore} from \"../../../store/vueStore/store\";\r\nimport {mutations, Store} from \"../../../store/vueStore\";\r\nimport {useState} from \"react\";\r\nimport {message} from \"antd\";\r\n\r\nexport type Data = {\r\n    time: string,\r\n    type: string,\r\n    sampleName: string\r\n    supplyMarket: string,\r\n    manufacturer: string,\r\n    key: string,\r\n    uuid: string\r\n}\r\n\r\n// use 套筒 模板\r\nexport function useSleeve() {\r\n    const {state,  changeDoc} = useChangeDoc();\r\n    const [BooleanVal, setBooleanVal] = useState<boolean>(false); // test显示\r\n    const times = useGetTime(2);\r\n    const data = useStore((store: Store) => {\r\n        const { state } = store;\r\n        const { settingData } = state;\r\n        return {\r\n            settingData\r\n        }\r\n    });\r\n\r\n    const perform = (values: any) => {\r\n        let da: Partial<Data> = {};\r\n        da.time = moment(values.time).format('YYYY-MM-DD');\r\n        da.type = values.level + values.specification;\r\n        da.sampleName = \"直螺纹套筒连接\";\r\n        da.supplyMarket = \"厂供\";\r\n        da.key = \"sleeve\";\r\n        da.uuid = da.key + times;\r\n        da.manufacturer = data.settingData.manufacturer;\r\n        let testDa = Object.assign(values, da);\r\n\r\n        if (BooleanVal) {\r\n            if (values.groupNum <= 1) {\r\n                testDa = Object.assign(data.settingData, testDa);\r\n                changeDoc('sleeve.docx', testDa);\r\n            }\r\n            else {\r\n                let dataList: typeof testDa = {};\r\n                for (let i = 0; i < 3; i++) { //当批量大于500 生成多列\r\n                    Object.keys(testDa).map(res => {\r\n                        if (res == 'groupNum') {\r\n                            dataList['groupNum' + i] = Math.ceil(values.groupNum) > i?\"1组\": ''; // 组数\r\n                        }\r\n                        else if (res == 'batch') {\r\n                            dataList['batch' + i] = (values.batch - (500 * i)) > 0?(values.batch - (500 * i))>500? 500: (values.batch - (500 * i)): ''; // 批量数\r\n                        }\r\n                        else {\r\n                            dataList[res + i] = Math.ceil(values.groupNum) > i? testDa[res]: \"\";\r\n                            dataList['id' + i] = Math.ceil(values.groupNum) > i? (i + 1): ''; // 序号\r\n                        }\r\n                    });\r\n                }\r\n                testDa = Object.assign(data.settingData, dataList);\r\n                changeDoc('sleeve.docx', testDa);\r\n            }\r\n        }\r\n        else {\r\n            mutations.addTabelData(testDa);\r\n            message.success('提交成功');\r\n        }\r\n    }\r\n\r\n    return {\r\n        state,\r\n        perform,\r\n        setBooleanVal\r\n    }\r\n}\r\n","E:\\react-study\\react-app\\src\\page\\demo\\component\\Modal.tsx",[],"E:\\react-study\\react-app\\src\\page\\demo\\component\\Descriptions.tsx",[],{"ruleId":"320","severity":1,"message":"321","line":5,"column":10,"nodeType":"322","messageId":"323","endLine":5,"endColumn":22},{"ruleId":"320","severity":1,"message":"324","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":15},{"ruleId":"320","severity":1,"message":"325","line":11,"column":8,"nodeType":"322","messageId":"323","endLine":11,"endColumn":12},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":39,"column":29,"nodeType":"332","messageId":"333","endLine":39,"endColumn":68},{"ruleId":"330","severity":1,"message":"331","line":39,"column":82,"nodeType":"332","messageId":"333","endLine":39,"endColumn":121},{"ruleId":"334","severity":1,"message":"335","line":1,"column":10,"nodeType":"322","messageId":"323","endLine":1,"endColumn":20},{"ruleId":"334","severity":1,"message":"336","line":6,"column":6,"nodeType":"322","messageId":"323","endLine":6,"endColumn":14},{"ruleId":"334","severity":1,"message":"337","line":27,"column":7,"nodeType":"322","messageId":"323","endLine":27,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":5,"column":1,"nodeType":"340","endLine":23,"endColumn":2},{"ruleId":"334","severity":1,"message":"341","line":48,"column":16,"nodeType":"322","messageId":"323","endLine":48,"endColumn":17},{"ruleId":"342","severity":1,"message":"343","line":52,"column":5,"nodeType":"322","endLine":52,"endColumn":14,"suggestions":"344"},{"ruleId":"342","severity":1,"message":"345","line":66,"column":7,"nodeType":"346","endLine":66,"endColumn":9,"suggestions":"347"},{"ruleId":"342","severity":1,"message":"345","line":74,"column":7,"nodeType":"346","endLine":74,"endColumn":9,"suggestions":"348"},{"ruleId":"342","severity":1,"message":"349","line":89,"column":7,"nodeType":"322","endLine":89,"endColumn":13},{"ruleId":"342","severity":1,"message":"350","line":89,"column":7,"nodeType":"322","endLine":89,"endColumn":13,"suggestions":"351"},{"ruleId":"334","severity":1,"message":"341","line":136,"column":31,"nodeType":"322","messageId":"323","endLine":136,"endColumn":32},{"ruleId":"352","severity":1,"message":"353","line":143,"column":38,"nodeType":"354","messageId":"355","endLine":143,"endColumn":40},{"ruleId":"356","severity":1,"message":"357","line":203,"column":15,"nodeType":"358","messageId":"359","endLine":203,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":207,"column":20,"nodeType":"358","messageId":"359","endLine":207,"endColumn":22},{"ruleId":"334","severity":1,"message":"360","line":221,"column":9,"nodeType":"322","messageId":"323","endLine":221,"endColumn":14},{"ruleId":"334","severity":1,"message":"361","line":224,"column":9,"nodeType":"322","messageId":"323","endLine":224,"endColumn":16},{"ruleId":"338","severity":1,"message":"362","line":19,"column":1,"nodeType":"340","endLine":22,"endColumn":3},{"ruleId":"334","severity":1,"message":"363","line":16,"column":14,"nodeType":"322","messageId":"323","endLine":16,"endColumn":22},{"ruleId":"364","severity":1,"message":"365","line":39,"column":1,"nodeType":"322","messageId":"366","endLine":39,"endColumn":8},{"ruleId":"334","severity":1,"message":"367","line":3,"column":13,"nodeType":"322","messageId":"323","endLine":3,"endColumn":15},{"ruleId":"334","severity":1,"message":"368","line":4,"column":10,"nodeType":"322","messageId":"323","endLine":4,"endColumn":12},{"ruleId":"334","severity":1,"message":"369","line":4,"column":14,"nodeType":"322","messageId":"323","endLine":4,"endColumn":18},{"ruleId":"334","severity":1,"message":"370","line":1,"column":22,"nodeType":"322","messageId":"323","endLine":1,"endColumn":30},{"ruleId":"356","severity":1,"message":"357","line":14,"column":22,"nodeType":"358","messageId":"359","endLine":14,"endColumn":24},{"ruleId":"326","replacedBy":"371"},{"ruleId":"328","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":74,"column":15,"nodeType":"375","messageId":"376","endLine":74,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":76,"column":16,"nodeType":"375","messageId":"376","endLine":76,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":77,"column":17,"nodeType":"375","messageId":"376","endLine":77,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":80,"column":16,"nodeType":"375","messageId":"376","endLine":80,"endColumn":60},{"ruleId":"334","severity":1,"message":"377","line":12,"column":12,"nodeType":"322","messageId":"323","endLine":12,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":33,"column":25,"nodeType":"358","messageId":"359","endLine":33,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":36,"column":30,"nodeType":"358","messageId":"359","endLine":36,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":48,"column":25,"nodeType":"358","messageId":"359","endLine":48,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":48,"column":45,"nodeType":"358","messageId":"359","endLine":48,"endColumn":47},{"ruleId":"356","severity":1,"message":"357","line":61,"column":45,"nodeType":"358","messageId":"359","endLine":61,"endColumn":47},{"ruleId":"356","severity":1,"message":"357","line":61,"column":77,"nodeType":"358","messageId":"359","endLine":61,"endColumn":79},{"ruleId":"373","severity":1,"message":"374","line":163,"column":15,"nodeType":"375","messageId":"376","endLine":163,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":165,"column":16,"nodeType":"375","messageId":"376","endLine":165,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":166,"column":17,"nodeType":"375","messageId":"376","endLine":166,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":169,"column":16,"nodeType":"375","messageId":"376","endLine":169,"endColumn":60},{"ruleId":"334","severity":1,"message":"378","line":9,"column":11,"nodeType":"322","messageId":"323","endLine":9,"endColumn":15},{"ruleId":"373","severity":1,"message":"374","line":72,"column":15,"nodeType":"375","messageId":"376","endLine":72,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":74,"column":16,"nodeType":"375","messageId":"376","endLine":74,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":75,"column":17,"nodeType":"375","messageId":"376","endLine":75,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":78,"column":16,"nodeType":"375","messageId":"376","endLine":78,"endColumn":60},{"ruleId":"334","severity":1,"message":"379","line":3,"column":9,"nodeType":"322","messageId":"323","endLine":3,"endColumn":20},{"ruleId":"334","severity":1,"message":"377","line":19,"column":12,"nodeType":"322","messageId":"323","endLine":19,"endColumn":17},{"ruleId":"373","severity":1,"message":"374","line":105,"column":15,"nodeType":"375","messageId":"376","endLine":105,"endColumn":38},{"ruleId":"334","severity":1,"message":"377","line":15,"column":12,"nodeType":"322","messageId":"323","endLine":15,"endColumn":17},{"ruleId":"373","severity":1,"message":"374","line":84,"column":38,"nodeType":"375","messageId":"376","endLine":84,"endColumn":61},{"ruleId":"334","severity":1,"message":"377","line":30,"column":12,"nodeType":"322","messageId":"323","endLine":30,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":51,"column":38,"nodeType":"358","messageId":"359","endLine":51,"endColumn":40},{"ruleId":"356","severity":1,"message":"357","line":70,"column":20,"nodeType":"358","messageId":"359","endLine":70,"endColumn":22},{"ruleId":"356","severity":1,"message":"357","line":73,"column":25,"nodeType":"358","messageId":"359","endLine":73,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":76,"column":25,"nodeType":"358","messageId":"359","endLine":76,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":79,"column":25,"nodeType":"358","messageId":"359","endLine":79,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":82,"column":25,"nodeType":"358","messageId":"359","endLine":82,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":85,"column":25,"nodeType":"358","messageId":"359","endLine":85,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":88,"column":25,"nodeType":"358","messageId":"359","endLine":88,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":91,"column":25,"nodeType":"358","messageId":"359","endLine":91,"endColumn":27},{"ruleId":"356","severity":1,"message":"380","line":100,"column":19,"nodeType":"358","messageId":"359","endLine":100,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":102,"column":23,"nodeType":"358","messageId":"359","endLine":102,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":105,"column":28,"nodeType":"358","messageId":"359","endLine":105,"endColumn":30},{"ruleId":"356","severity":1,"message":"357","line":105,"column":48,"nodeType":"358","messageId":"359","endLine":105,"endColumn":50},{"ruleId":"356","severity":1,"message":"357","line":108,"column":28,"nodeType":"358","messageId":"359","endLine":108,"endColumn":30},{"ruleId":"356","severity":1,"message":"357","line":108,"column":51,"nodeType":"358","messageId":"359","endLine":108,"endColumn":53},{"ruleId":"356","severity":1,"message":"357","line":108,"column":72,"nodeType":"358","messageId":"359","endLine":108,"endColumn":74},{"ruleId":"356","severity":1,"message":"357","line":111,"column":28,"nodeType":"358","messageId":"359","endLine":111,"endColumn":30},{"ruleId":"373","severity":1,"message":"374","line":188,"column":15,"nodeType":"375","messageId":"376","endLine":188,"endColumn":38},{"ruleId":"334","severity":1,"message":"377","line":16,"column":12,"nodeType":"322","messageId":"323","endLine":16,"endColumn":17},{"ruleId":"373","severity":1,"message":"374","line":106,"column":15,"nodeType":"375","messageId":"376","endLine":106,"endColumn":38},{"ruleId":"356","severity":1,"message":"357","line":17,"column":24,"nodeType":"358","messageId":"359","endLine":17,"endColumn":26},{"ruleId":"373","severity":1,"message":"374","line":74,"column":15,"nodeType":"375","messageId":"376","endLine":74,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":76,"column":16,"nodeType":"375","messageId":"376","endLine":76,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":77,"column":17,"nodeType":"375","messageId":"376","endLine":77,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":80,"column":16,"nodeType":"375","messageId":"376","endLine":80,"endColumn":60},{"ruleId":"373","severity":1,"message":"374","line":78,"column":15,"nodeType":"375","messageId":"376","endLine":78,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":80,"column":16,"nodeType":"375","messageId":"376","endLine":80,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":81,"column":17,"nodeType":"375","messageId":"376","endLine":81,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":84,"column":16,"nodeType":"375","messageId":"376","endLine":84,"endColumn":60},{"ruleId":"373","severity":1,"message":"374","line":78,"column":15,"nodeType":"375","messageId":"376","endLine":78,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":80,"column":16,"nodeType":"375","messageId":"376","endLine":80,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":81,"column":17,"nodeType":"375","messageId":"376","endLine":81,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":84,"column":16,"nodeType":"375","messageId":"376","endLine":84,"endColumn":60},{"ruleId":"334","severity":1,"message":"377","line":29,"column":12,"nodeType":"322","messageId":"323","endLine":29,"endColumn":17},{"ruleId":"352","severity":1,"message":"353","line":34,"column":29,"nodeType":"354","messageId":"355","endLine":34,"endColumn":31},{"ruleId":"356","severity":1,"message":"357","line":35,"column":29,"nodeType":"358","messageId":"359","endLine":35,"endColumn":31},{"ruleId":"352","severity":1,"message":"353","line":48,"column":57,"nodeType":"354","messageId":"355","endLine":48,"endColumn":59},{"ruleId":"352","severity":1,"message":"353","line":52,"column":43,"nodeType":"354","messageId":"355","endLine":52,"endColumn":45},{"ruleId":"356","severity":1,"message":"357","line":53,"column":27,"nodeType":"358","messageId":"359","endLine":53,"endColumn":29},{"ruleId":"356","severity":1,"message":"357","line":55,"column":35,"nodeType":"358","messageId":"359","endLine":55,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":64,"column":35,"nodeType":"358","messageId":"359","endLine":64,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":71,"column":35,"nodeType":"358","messageId":"359","endLine":71,"endColumn":37},{"ruleId":"356","severity":1,"message":"380","line":82,"column":28,"nodeType":"358","messageId":"359","endLine":82,"endColumn":30},{"ruleId":"356","severity":1,"message":"357","line":85,"column":41,"nodeType":"358","messageId":"359","endLine":85,"endColumn":43},{"ruleId":"356","severity":1,"message":"357","line":94,"column":41,"nodeType":"358","messageId":"359","endLine":94,"endColumn":43},{"ruleId":"356","severity":1,"message":"357","line":101,"column":41,"nodeType":"358","messageId":"359","endLine":101,"endColumn":43},{"ruleId":"356","severity":1,"message":"357","line":119,"column":36,"nodeType":"358","messageId":"359","endLine":119,"endColumn":38},{"ruleId":"352","severity":1,"message":"353","line":122,"column":37,"nodeType":"354","messageId":"355","endLine":122,"endColumn":39},{"ruleId":"356","severity":1,"message":"357","line":128,"column":31,"nodeType":"358","messageId":"359","endLine":128,"endColumn":33},{"ruleId":"352","severity":1,"message":"353","line":129,"column":73,"nodeType":"354","messageId":"355","endLine":129,"endColumn":75},{"ruleId":"381","severity":1,"message":"382","line":225,"column":35,"nodeType":"383","endLine":225,"endColumn":38},{"ruleId":"381","severity":1,"message":"382","line":276,"column":21,"nodeType":"383","endLine":276,"endColumn":24},{"ruleId":"334","severity":1,"message":"384","line":2,"column":17,"nodeType":"322","messageId":"323","endLine":2,"endColumn":27},{"ruleId":"334","severity":1,"message":"385","line":3,"column":32,"nodeType":"322","messageId":"323","endLine":3,"endColumn":40},{"ruleId":"373","severity":1,"message":"374","line":116,"column":15,"nodeType":"375","messageId":"376","endLine":116,"endColumn":38},{"ruleId":"373","severity":1,"message":"374","line":118,"column":16,"nodeType":"375","messageId":"376","endLine":118,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":119,"column":17,"nodeType":"375","messageId":"376","endLine":119,"endColumn":50},{"ruleId":"373","severity":1,"message":"374","line":122,"column":16,"nodeType":"375","messageId":"376","endLine":122,"endColumn":60},{"ruleId":"334","severity":1,"message":"386","line":1,"column":22,"nodeType":"322","messageId":"323","endLine":1,"endColumn":43},{"ruleId":"334","severity":1,"message":"387","line":1,"column":45,"nodeType":"322","messageId":"323","endLine":1,"endColumn":53},{"ruleId":"334","severity":1,"message":"388","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":26},{"ruleId":"334","severity":1,"message":"389","line":1,"column":28,"nodeType":"322","messageId":"323","endLine":1,"endColumn":42},{"ruleId":"334","severity":1,"message":"390","line":1,"column":44,"nodeType":"322","messageId":"323","endLine":1,"endColumn":61},{"ruleId":"334","severity":1,"message":"391","line":1,"column":69,"nodeType":"322","messageId":"323","endLine":1,"endColumn":81},{"ruleId":"334","severity":1,"message":"392","line":1,"column":83,"nodeType":"322","messageId":"323","endLine":1,"endColumn":92},{"ruleId":"334","severity":1,"message":"393","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":19},{"ruleId":"334","severity":1,"message":"341","line":46,"column":24,"nodeType":"322","messageId":"323","endLine":46,"endColumn":25},{"ruleId":"352","severity":1,"message":"353","line":57,"column":42,"nodeType":"354","messageId":"355","endLine":57,"endColumn":44},{"ruleId":"352","severity":1,"message":"353","line":63,"column":62,"nodeType":"354","messageId":"355","endLine":63,"endColumn":64},{"ruleId":"394","severity":1,"message":"395","line":50,"column":45,"nodeType":"354","messageId":"396","endLine":61,"endColumn":22},{"ruleId":"352","severity":1,"message":"353","line":50,"column":49,"nodeType":"354","messageId":"355","endLine":50,"endColumn":51},{"ruleId":"356","severity":1,"message":"357","line":51,"column":33,"nodeType":"358","messageId":"359","endLine":51,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":54,"column":38,"nodeType":"358","messageId":"359","endLine":54,"endColumn":40},"no-unused-vars","'GlobalRouter' is defined but never used.","Identifier","unusedVar","'routers' is defined but never used.","'Test' is defined but never used.","no-native-reassign",["397"],"no-negated-in-lhs",["398"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","'Selector' is defined but never used.","'useEffectBack' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'T' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBoolValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [boolValue, callback] as a second argument to the useEffect Hook.",["399"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["400"],["401"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'boolValue' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["402"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","Assign object to a variable before exporting as module default","'setTodos' is assigned a value but never used.","no-const-assign","'service' is constant.","const","'Rx' is defined but never used.","'of' is defined but never used.","'from' is defined but never used.","'useState' is defined but never used.",["397"],["398"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'state' is assigned a value but never used.","'time' is assigned a value but never used.","'useBooleans' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DatePicker' is defined but never used.","'useMount' is defined but never used.","'ReactComponentElement' is defined but never used.","'ReactDOM' is defined but never used.","'Attributes' is defined but never used.","'ComponentClass' is defined but never used.","'FunctionComponent' is defined but never used.","'ReactElement' is defined but never used.","'ReactNode' is defined but never used.","'useCreated' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'testDa'.","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},{"desc":"408","fix":"409"},"Add dependencies array: [boolValue, callback]",{"range":"410","text":"411"},"Update the dependencies array to be: [callback]",{"range":"412","text":"413"},{"range":"414","text":"413"},"Update the dependencies array to be: [boolValue, callback]",{"range":"415","text":"416"},[1471,1471],", [boolValue, callback]",[1623,1625],"[callback]",[1784,1786],[2185,2191],"[boolValue, callback]"]