[{"E:\\react-study\\react-app\\src\\index.js":"1","E:\\react-study\\react-app\\src\\App.js":"2","E:\\react-study\\react-app\\src\\reportWebVitals.js":"3","E:\\react-study\\react-app\\src\\router\\react-router.tsx":"4","E:\\react-study\\react-app\\src\\utils\\ContextState.tsx":"5","E:\\react-study\\react-app\\src\\router\\router.tsx":"6","E:\\react-study\\react-app\\src\\router\\index.tsx":"7","E:\\react-study\\react-app\\src\\page\\text.tsx":"8","E:\\react-study\\react-app\\src\\store\\vueStore\\index.ts":"9","E:\\react-study\\react-app\\src\\page\\test2.tsx":"10","E:\\react-study\\react-app\\src\\store\\vueStore\\store.ts":"11","E:\\react-study\\react-app\\src\\page\\test3.tsx":"12","E:\\react-study\\react-app\\src\\utils\\hooks.tsx":"13","E:\\react-study\\react-app\\src\\store\\vuex\\index.ts":"14","E:\\react-study\\react-app\\src\\page\\test4.tsx":"15","E:\\react-study\\react-app\\src\\utils\\request.ts":"16","E:\\react-study\\react-app\\src\\page\\test5.tsx":"17","E:\\react-study\\react-app\\src\\page\\test6.tsx":"18","E:\\react-study\\react-app\\src\\router\\route.tsx":"19","E:\\react-study\\react-app\\src\\page\\testDoc.tsx":"20","E:\\react-study\\react-app\\src\\page\\demo\\index.tsx":"21","E:\\react-study\\react-app\\src\\page\\demo\\reinforc.tsx":"22","E:\\react-study\\react-app\\src\\page\\demo\\concrete.tsx":"23","E:\\react-study\\react-app\\src\\page\\demo\\mortar.tsx":"24","E:\\react-study\\react-app\\src\\page\\demo\\switch.tsx":"25","E:\\react-study\\react-app\\src\\page\\demo\\sleeve.tsx":"26","E:\\react-study\\react-app\\src\\page\\demo\\brick.tsx":"27","E:\\react-study\\react-app\\src\\page\\demo\\waterproof.tsx":"28","E:\\react-study\\react-app\\src\\page\\demo\\soil\\index.tsx":"29","E:\\react-study\\react-app\\src\\page\\demo\\soil\\dust.tsx":"30","E:\\react-study\\react-app\\src\\page\\demo\\soil\\plainSoil.tsx":"31","E:\\react-study\\react-app\\src\\page\\demo\\soil\\ringKnife.tsx":"32","E:\\react-study\\react-app\\src\\page\\demo\\query\\index.tsx":"33","E:\\react-study\\react-app\\src\\page\\demo\\setting\\index.tsx":"34","E:\\react-study\\react-app\\src\\page\\test\\index.tsx":"35"},{"size":1427,"mtime":1611814593419,"results":"36","hashOfConfig":"37"},{"size":528,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":1752,"mtime":1611045267184,"results":"40","hashOfConfig":"37"},{"size":2070,"mtime":1611817020061,"results":"41","hashOfConfig":"37"},{"size":2632,"mtime":1611134590940,"results":"42","hashOfConfig":"37"},{"size":1289,"mtime":1611629567792,"results":"43","hashOfConfig":"37"},{"size":914,"mtime":1611727833589,"results":"44","hashOfConfig":"37"},{"size":734,"mtime":1612166756616,"results":"45","hashOfConfig":"37"},{"size":571,"mtime":1611138488232,"results":"46","hashOfConfig":"37"},{"size":1094,"mtime":1611900416023,"results":"47","hashOfConfig":"37"},{"size":873,"mtime":1611735890119,"results":"48","hashOfConfig":"37"},{"size":6578,"mtime":1612164363705,"results":"49","hashOfConfig":"37"},{"size":358,"mtime":1611218636667,"results":"50","hashOfConfig":"37"},{"size":945,"mtime":1611736208514,"results":"51","hashOfConfig":"37"},{"size":739,"mtime":1611222686624,"results":"52","hashOfConfig":"37"},{"size":1690,"mtime":1611736500083,"results":"53","hashOfConfig":"37"},{"size":1790,"mtime":1612160086885,"results":"54","hashOfConfig":"37"},{"size":2235,"mtime":1612170155219,"results":"55","hashOfConfig":"37"},{"size":493,"mtime":1611803610339,"results":"56","hashOfConfig":"37"},{"size":1696,"mtime":1611819336137,"results":"57","hashOfConfig":"37"},{"size":2938,"mtime":1611823004734,"results":"58","hashOfConfig":"37"},{"size":6205,"mtime":1612166955860,"results":"59","hashOfConfig":"37"},{"size":2867,"mtime":1611823543642,"results":"60","hashOfConfig":"37"},{"size":2320,"mtime":1611823851973,"results":"61","hashOfConfig":"37"},{"size":2328,"mtime":1611823957419,"results":"62","hashOfConfig":"37"},{"size":3218,"mtime":1611824166006,"results":"63","hashOfConfig":"37"},{"size":3174,"mtime":1611824487979,"results":"64","hashOfConfig":"37"},{"size":1007,"mtime":1611826292533,"results":"65","hashOfConfig":"37"},{"size":2962,"mtime":1611825294547,"results":"66","hashOfConfig":"37"},{"size":3157,"mtime":1611826034546,"results":"67","hashOfConfig":"37"},{"size":3157,"mtime":1611826201032,"results":"68","hashOfConfig":"37"},{"size":3305,"mtime":1611827176720,"results":"69","hashOfConfig":"37"},{"size":4645,"mtime":1612165358984,"results":"70","hashOfConfig":"37"},{"size":1572,"mtime":1612170623036,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"21qtdk",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react-study\\react-app\\src\\index.js",["165","166","167"],"import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalRouter } from './router/router';\nimport routers from './router';\nimport { store } from './store/vueStore/index';  // vue3.0 双向数据\nimport { Provider, ProviderDa, ProviderHash } from './utils/ContextState'; // 公共context 集\nimport State from \"../src/store/vuex/index\";\nimport route from \"./router/route\";\nimport Test from './page/text'; // 官方指定测试区域\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n      <HashRouter> {/* hash 路由*/}\n          <Suspense fallback={ <div>loading ......</div> }>\n              <ProviderDa value={ State }>\n                  <Provider value={ store }>\n                      {/*<GlobalRouter routerDate={ routers }>// 假路由 exe不适用*/}\n                      {/*    <Test/>*/}\n                      {/*</GlobalRouter>*/}\n                      <ProviderHash route={ route }></ProviderHash> {/* hash 路由*/}\n                  </Provider>\n              </ProviderDa>\n          </Suspense>\n      </HashRouter>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// const\n",["168","169"],"E:\\react-study\\react-app\\src\\App.js",[],"E:\\react-study\\react-app\\src\\reportWebVitals.js",[],"E:\\react-study\\react-app\\src\\router\\react-router.tsx",[],["170","171"],"E:\\react-study\\react-app\\src\\utils\\ContextState.tsx",[],"E:\\react-study\\react-app\\src\\router\\router.tsx",[],"E:\\react-study\\react-app\\src\\router\\index.tsx",[],"E:\\react-study\\react-app\\src\\page\\text.tsx",[],"E:\\react-study\\react-app\\src\\store\\vueStore\\index.ts",["172","173"],"E:\\react-study\\react-app\\src\\page\\test2.tsx",[],"E:\\react-study\\react-app\\src\\store\\vueStore\\store.ts",["174","175","176"],"import { useReducer, useRef, useEffect } from \"react\";\r\nimport { useGlobalState } from '../../utils/ContextState';\r\nimport {effect, ReactiveEffect, stop} from \"@vue/reactivity\";\r\nimport { useUpdate } from '../../utils/hooks';\r\n\r\ntype Selector<T, S> = (store: T) => S;\r\n//\r\nexport const useStore = (callback: any) => {\r\n    const store = useGlobalState();\r\n    console.log(store)\r\n    const updateTem = useUpdate();\r\n    const effectBack = effect( () =>\r\n        callback(store),\r\n        {\r\n            scheduler: job => {\r\n                if (job() === undefined) return;\r\n                updateTem();\r\n            },\r\n            lazy: true\r\n        }\r\n    );\r\n    console.log(effectBack());\r\n    return effectBack();\r\n}\r\n\r\n// 组件挂载后执行\r\nconst useEffectBack = (...param: Parameters<typeof effect>) => {\r\n    const data = useRef<ReactiveEffect>();\r\n    if (!data.current) {\r\n        data.current = effect(...param);\r\n    }\r\n\r\n    const stopEffect = () => {\r\n        stop(data.current!);\r\n    }\r\n\r\n    useEffect(() =>\r\n        stopEffect\r\n    , []);\r\n\r\n    return data.current;\r\n}\r\n","E:\\react-study\\react-app\\src\\page\\test3.tsx",["177"],"import React, { useReducer } from \"react\";\r\nimport { useWatch, useVuex } from '../utils/hooks';\r\n\r\n// 模拟wacth\r\nexport default () => {\r\n    const [state, setState] = useReducer((s: any) => s + 1 ,0);\r\n    const { val, oldVal } = useWatch(state, (val, oldVal) => {\r\n         console.log(val, oldVal);\r\n         return {\r\n             val,\r\n             oldVal\r\n         }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Aa></Aa>\r\n            <p>{ state } --- { val } { oldVal }</p>\r\n            <button onClick={() => { setState() }}> 点我 </button>\r\n            <div>我是测试3.0</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Aa = () => {\r\n    const { fun, state} = useVuex();\r\n\r\n    return (\r\n        <>\r\n            <p>{ state.count }</p>\r\n            <button onClick={() => {\r\n                fun.add()\r\n            }}>莫挨老子</button>\r\n        </>\r\n    );\r\n}\r\n","E:\\react-study\\react-app\\src\\utils\\hooks.tsx",["178","179","180","181","182","183","184","185","186","187","188","189"],"import {useEffect, useReducer, useRef, useState} from \"react\";\r\nimport {Store} from \"../store/vuex\";\r\nimport {useGlobalData} from \"./ContextState\";\r\nimport Docxtemplater from 'docxtemplater';\r\nimport { saveAs } from 'file-saver';\r\nimport PizZip from 'pizzip';\r\nimport JSZipUtils from 'jszip-utils';\r\n\r\n\r\ntype Callback<T> = (val: T | undefined, oldVal: T | undefined) => T;\r\n\r\n// 模拟观察者\r\nexport function useWatch<T>(da: T, callback: Callback<T> ) {\r\n    const data = useRef<T>();\r\n    useEffect(() => {\r\n        data.current = da;\r\n    })\r\n    return callback(da, data.current);\r\n}\r\n\r\n// 强制组件更新\r\nexport const useUpdate = () => {\r\n    const [,setCount] = useReducer(s => s + 1, 0);\r\n    return setCount;\r\n}\r\n\r\n\r\nconst reducer = (state: Store, action: Store): Store => {\r\n    state = action\r\n    return state\r\n}\r\n\r\n\r\n// Hooks context 共享数据\r\nexport const useVuex = () => {\r\n    const { store, useManage } = useGlobalData();\r\n    const [ state, setState ] = useReducer(reducer, store);\r\n\r\n    const changeDa = JSON.parse(JSON.stringify( state ));\r\n    return {\r\n        fun: useManage( changeDa, setState ),\r\n        state\r\n    }\r\n}\r\n\r\n\r\n// 生命周期 初始化\r\ntype Callbacks<T> = () => void;\r\nexport function useCreated<T>(callback: Callbacks<T>): void {\r\n    const [boolValue, setBoolValue] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if(boolValue) {\r\n            setBoolValue(false);\r\n            callback && callback();\r\n        }\r\n        setBoolValue(true);\r\n    })\r\n}\r\n\r\n\r\n// 生命周期 组件挂载 触发一次\r\nexport function useMount<T>(callback: Callbacks<T>): void {\r\n    useEffect(() => {\r\n        callback && callback();\r\n    },[])\r\n}\r\n\r\n\r\n// 生命周期 组件卸载 触发\r\nexport function useMounted<T>(callback: Callbacks<T>) {\r\n    useEffect(() => {\r\n        return () => callback && callback();\r\n    },[])\r\n}\r\n\r\n\r\n// 生命周期 组件依赖跟新\r\nexport function useUpdata<T>(depend: T, callback: Callbacks<T>): void {\r\n    const [boolValue, setBoolValue] = useState<boolean>(false);\r\n    const Depend = Array.isArray(depend) ? [...depend] : [depend];\r\n\r\n    useEffect(() => {\r\n        if(boolValue) {\r\n            setBoolValue(false);\r\n            callback && callback();\r\n        }\r\n        setBoolValue(true);\r\n    },Depend)\r\n}\r\n\r\n\r\n//模拟 ahooks useBoolean\r\ntype BooleanActions = {\r\n    toggle: (boo: boolean | undefined) => void,\r\n    setTrue: () => void,\r\n    setFalse: () => void,\r\n}\r\n\r\ntype BooleanBack = [\r\n    state: boolean,\r\n    BooleanActions: BooleanActions\r\n]\r\n\r\nexport function useBooleans(boo: boolean = false): BooleanBack {\r\n    const [state, setState] = useState<boolean>( boo );\r\n\r\n    const toggle = (value: boolean = state) => {\r\n        setState(value);\r\n    }\r\n\r\n    const setTrue = () => {\r\n        setState(true);\r\n    }\r\n\r\n    const setFalse = () => {\r\n        setState(false);\r\n    }\r\n\r\n    return [\r\n        state,\r\n        {\r\n            toggle,\r\n            setTrue,\r\n            setFalse,\r\n        }\r\n    ];\r\n}\r\n\r\n\r\n// 模拟 Ahooks useClickAway 管理目标元素外点击事件的 Hook。\r\ntype TargetArray = [\r\n    arr: string[],\r\n    fn?: () => void,\r\n] | any[]\r\nexport function useClickAways<T>(clickAway: MouseEvent | TouchEvent | any, target: string | string [], eventName?: string) {\r\n    const event = eventName || 'click';\r\n\r\n    useMount(() => {\r\n        document.addEventListener(event, clickAway);\r\n        console.log(target)\r\n        let Targets: TargetArray = Array.isArray(target) ? target : [target];\r\n        Targets[0].map((res: string) => {\r\n            let dom: any = document.getElementById(res);\r\n            dom.addEventListener(event, (e: any) => {\r\n                e.stopPropagation();\r\n            })\r\n        });\r\n    });\r\n\r\n    useMounted(() => {\r\n        document.removeEventListener<any>(event, clickAway);\r\n    });\r\n}\r\n\r\n\r\n// 导出World\r\nexport function useChangeDoc<T>() {\r\n    const [state, setState] = useState<boolean>(false); // 导出状态\r\n    // name 目标文件名称\r\n    // data 待替换字符串\r\n    const changeDoc = (name: string, data: T) => {\r\n        JSZipUtils.getBinaryContent(name, function(error: T, content: number[]) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            const zip = new PizZip(content);\r\n            const doc = new Docxtemplater();\r\n            doc.loadZip(zip);\r\n            doc.compile();\r\n            setState(false);\r\n            doc.resolveData(data).then(function () {\r\n                doc.render();\r\n                const out = doc.getZip().generate({\r\n                    type: \"blob\",\r\n                    mimeType: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n                });\r\n                saveAs(out, name);\r\n                setState(true);\r\n            })\r\n        });\r\n    }\r\n    return {state,  changeDoc};\r\n}\r\n\r\n// 获取当前时间\r\nexport function useGetTime(format: number = 1) {\r\n    let now = new Date();\r\n    let year: string | number = now.getFullYear(); //得到年份\r\n    let month: string | number = now.getMonth();//得到月份\r\n    let date: string | number = now.getDate();//得到日期\r\n    let hour: string | number = now.getHours();//得到小时\r\n    let minu: string | number = now.getMinutes();//得到分钟\r\n    let sec: string | number = now.getSeconds();//得到秒\r\n    month = month + 1;\r\n    if (month < 10) month = \"0\" + month;\r\n    if (date < 10) date = \"0\" + date;\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (minu < 10) minu = \"0\" + minu;\r\n    if (sec < 10) sec = \"0\" + sec;\r\n    let time = \"\";\r\n    //精确到天\r\n    if(format == 1){\r\n        time = year + \"-\" + month + \"-\" + date;\r\n    }\r\n    //精确到分\r\n    else if(format == 2){\r\n        time = year + \"-\" + month + \"-\" + date+ \" \" + hour + \":\" + minu + \":\" + sec;\r\n    }\r\n    return time;\r\n}\r\n\r\n\r\nexport function DateDiff(faultDate: string, completeTime: string): number{\r\n    let stime =new Date(faultDate).getTime();\r\n    let etime = new Date(completeTime).getTime();\r\n    let usedTime = etime - stime;  //两个时间戳相差的毫秒数\r\n    let days=Math.floor(usedTime/(24*3600*1000));\r\n    //计算出小时数\r\n    let leave1=usedTime%(24*3600*1000);    //计算天数后剩余的毫秒数\r\n    let hours=Math.floor(leave1/(3600*1000));\r\n    //计算相差分钟数\r\n    let leave2=leave1%(3600*1000);        //计算小时数后剩余的毫秒数\r\n    let minutes=Math.floor(leave2/(60*1000));\r\n    // let time = days + \"天\"+hours+\"时\"+minutes+\"分\";\r\n    let time = days;\r\n    return time;\r\n}\r\n","E:\\react-study\\react-app\\src\\store\\vuex\\index.ts",["190"],"const store: any = {}\r\n\r\nexport type Store = typeof store;\r\n\r\nexport const useManage = (state: Store, setState: any) => {\r\n    /**\r\n     * 测试组件Context共享数据\r\n     * */\r\n    const add = () => {\r\n        state.count += 1;\r\n        setState(state);\r\n    }\r\n\r\n    return {\r\n        add\r\n    }\r\n}\r\n\r\nexport default {\r\n    store,\r\n    useManage\r\n};\r\n","E:\\react-study\\react-app\\src\\page\\test4.tsx",["191"],"import React, {memo, useEffect, useState} from \"react\";\r\nimport axios from \"../utils/request\";\r\n\r\ntype Todo = {\r\n    id: number,\r\n    name: string,\r\n    done?: boolean\r\n};\r\n\r\ntype Todos = Todo[];\r\n\r\nconst Test4 = () => {\r\n    // @ts-ignore\r\n    const [todo, setTodo] = useState<Todo>({name: '', id: 0});\r\n    // @ts-ignore\r\n    const [, setTodos] = useState <Todos>([]);\r\n\r\n    const refreshTodos = () => {\r\n        // 这边必须手动声明axios的返回类型。\r\n        axios.get<Todos>( \"/index.json\").then(res => {\r\n            console.log(res)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshTodos();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => {setTodo({\r\n                id: 12312,\r\n                name: 'caomingrui'\r\n            })}}>莫挨老子</button>\r\n            <p>{ todo.name }</p>\r\n            <p>我是测试4.0</p>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default memo(Test4);\r\n","E:\\react-study\\react-app\\src\\utils\\request.ts",["192"],"import axios from 'axios';\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n\r\nconst createType = {\r\n    // axios 请求 公共区域\r\n    baseURL: process.env.REACT_APP_BASE_API,\r\n    //超时\r\n    timeout: 1000\r\n}\r\n\r\n/**\r\n * 创建axios实例\r\n * */\r\nconst service = axios.create( createType );\r\n\r\n/**\r\n * 请求拦截器\r\n * */\r\nservice.interceptors.request.use( config => {\r\n    return config;\r\n\r\n}, error => {\r\n    Promise.reject((error))\r\n});\r\n\r\n/**\r\n * 响应拦截器\r\n * */\r\nservice.interceptors.response.use( res => {\r\n    const response = res.data;\r\n    return response;\r\n\r\n}, error => {\r\n    console.log('err' + error) // for debug\r\n    return Promise.reject(error)\r\n})\r\n\r\nservice = <T>(url: Url, payload?: any): Promise<T> | never => {\r\n\r\n    return Promise.resolve(data as any)\r\n}\r\n\r\nexport default service;\r\n","E:\\react-study\\react-app\\src\\page\\test5.tsx",[],"E:\\react-study\\react-app\\src\\page\\test6.tsx",["193","194","195"],"import React, { memo } from \"react\";\r\nimport { useCreated } from \"../utils/hooks\";\r\nimport * as Rx from 'rxjs'\r\nimport { of, from, fromEvent } from 'rxjs';\r\n// import Observable from 'rxjs/Observable';\r\n// import 'rxjs/add/observable/fromPromise';\r\n\r\n// 入门Rxjs\r\nconst Test6 = () => {\r\n\r\n    useCreated(() => {\r\n        // const obs = of('foo', 'bar'); // 一个或多值\r\n        // const obs = from([1, 2, 3]); // 数组\r\n        // @ts-ignore\r\n        // const obs = fromEvent(document.querySelector('button'), 'click'); // 事件\r\n\r\n        // const obs = Observable.fromPromise((res) => res(1));\r\n        // console.log(obs);\r\n        // obs.subscribe((val: any) => console.log(val), (err: any) => console.log(err), () => console.log('end'))\r\n\r\n        // 外部产生新事物\r\n        // let myObserv = new Rx.Subject();\r\n        // myObserv.subscribe(val => console.log(val));\r\n        // myObserv.next('foo');\r\n\r\n        // 内部产生新事物\r\n        // let myObserv = Rx.Observable.create(observer => {\r\n        //     observer.next('foo');\r\n        //     observer.next('car');\r\n        //     setTimeout(() => observer.next(123123), 1000);\r\n        // });\r\n        // myObserv.subscribe((val: any) => console.log(val));\r\n\r\n        const obs: any = fromEvent(document.querySelector('button'), 'input'); // 事件\r\n        console.log(obs)\r\n        // 过滤掉小于3个字符长度的目标值\r\n        // obs.filter((event: any) => event.target.value.length > 2)\r\n        //     .map((event: any) => event.target.value)\r\n        //     .subscribe((value: any) => console.log(value)); // \"hel\"\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <input className='button'/>\r\n         <p>我是测试test6 -- Rxjs</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(Test6);\r\n","E:\\react-study\\react-app\\src\\router\\route.tsx",[],"E:\\react-study\\react-app\\src\\page\\testDoc.tsx",["196","197"],"import React, {memo, useState} from \"react\";\r\nimport { useChangeDoc } from '../utils/hooks';\r\n\r\nconst TestDoc = () => {\r\n    const {state,  changeDoc} = useChangeDoc();\r\n\r\n    function changeName() {\r\n        changeDoc('a.docx', {name: 'rui'});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={changeName}>测试</button>\r\n            <p>{state==false?'false': 'true'}</p>\r\n            <p>我是测试test6 -- Rxjs</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(TestDoc);\r\n",["198","199"],"E:\\react-study\\react-app\\src\\page\\demo\\index.tsx",[],"E:\\react-study\\react-app\\src\\page\\demo\\reinforc.tsx",["200","201","202","203"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport { useCreated, useGetTime } from \"../../utils/hooks\";\r\nimport moment from 'moment'\r\n\r\n// 钢筋原料\r\nconst Reinforc = () => {\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n        );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            钢筋原料\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'b'} label=\"批号\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"厂家\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"重量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"重量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Reinforc);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\concrete.tsx",["204","205","206","207","208","209","210","211","212","213","214"],"E:\\react-study\\react-app\\src\\page\\demo\\mortar.tsx",["215","216","217","218","219"],"import React, {memo, useRef} from \"react\";\r\nimport {Button, DatePicker, Form, Input, Select} from \"antd\";\r\nimport {useCreated, useGetTime} from \"../../utils/hooks\";\r\n\r\n// mortar 砂浆\r\nconst Mortar = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            mortar 砂浆 --- 实验日期提醒\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"强度\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"厂家\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"实验日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"养护\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">标准养护</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Mortar);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\switch.tsx",["220","221","222","223"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// switch 混泥土\r\nconst Switch = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            switch 电渣压力焊\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item name={'h'} label=\"组数\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Switch);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\sleeve.tsx",["224","225","226","227"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// sleeve  直螺纹套筒\r\nconst Sleeve = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            sleeve  直螺纹套筒\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item name={'h'} label=\"组数\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Sleeve);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\brick.tsx",["228","229","230","231","232","233"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// brick 砖\r\nconst Concrete = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            brick 砖\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"类别\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"规格\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"生产\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"进场日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">。。。</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Concrete);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\waterproof.tsx",["234","235","236","237"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// waterproof 防水卷材\r\nconst Waterproof = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            waterproof 防水卷材\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'a'} label=\"规格型号等级\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"出厂编号\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'c'} label=\"生产厂家\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"供销\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"进场日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Waterproof);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\index.tsx",["238"],"import React, {memo, useState} from 'react';\r\nimport Dust from \"./dust\";\r\nimport PlainSoil from \"./plainSoil\";\r\nimport RingKnife from \"./ringKnife\";\r\nimport { Button } from 'antd';\r\n\r\nexport default memo(() => {\r\n    const [state, setState] = useState<number>(0);\r\n\r\n    const Render = () => {\r\n        if (state === 0) {\r\n            return <Dust/>\r\n        }\r\n        else if (state === 1) {\r\n            return <PlainSoil/>\r\n        }\r\n        else if (state == 2) {\r\n            return <RingKnife/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n         我是土爸爸\r\n            <p>\r\n                <Button type={state===0?'primary': 'default'} onClick={()=>setState(0)}>灰土</Button>\r\n                <Button type={state===1?'primary': 'default'} onClick={()=>setState(1)}>素土</Button>\r\n                <Button type={state===2?'primary': 'default'} onClick={()=>setState(2)}>环刀</Button>\r\n            </p>\r\n            {\r\n                Render()\r\n            }\r\n        </>\r\n    );\r\n})\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\dust.tsx",["239","240","241","242"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport { useCreated, useGetTime } from \"../../../utils/hooks\";\r\nimport moment from 'moment'\r\n\r\n// 灰土\r\nconst Dust = () => {\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            灰土 Dust\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'h'} label=\"规格型号\" rules={[{ required: true }]}>\r\n                    <Input disabled value='/'/>\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"出厂编号\" rules={[{ required: true }]}>\r\n                    <Input disabled value='/'/>\r\n                </Form.Item>\r\n                <Form.Item name={'a'} label=\"生产厂家\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'b'} label=\"供销单位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'d'} label=\"进厂日期\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'b'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input disabled value='100'/>\r\n                </Form.Item>\r\n                <Form.Item name={'h'} label=\"批量\" rules={[{ required: true }]}>\r\n                    <Input disabled value='/'/>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(Dust);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\plainSoil.tsx",["243","244","245","246"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// PlainSoil 素土\r\nconst PlainSoil = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            PlainSoil 素土\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'f'} label=\"干密度\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"含水率\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'a'} label=\"体积\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={['a', 'b', 'c']} label=\"层数厚度标高\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                    <Input />\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"使用机械\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"系数\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(PlainSoil);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\soil\\ringKnife.tsx",["247","248","249","250"],"import React, {memo, useRef} from \"react\";\r\nimport { Select, Button, Form, Input, DatePicker } from 'antd';\r\nimport {useCreated, useGetTime} from \"../../../utils/hooks\";\r\nimport moment from \"_moment@2.29.1@moment\";\r\n\r\n// ringKnife 环刀\r\nconst RingKnife = () => {\r\n\r\n    const formTab = useRef(null);\r\n    const time = useGetTime();\r\n\r\n    useCreated(() => {\r\n        if (formTab != null) {\r\n            // @ts-ignore\r\n            formTab.current.setFieldsValue({e: moment(time)})\r\n        }}\r\n    );\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            ringKnife 环刀\r\n\r\n            <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'f'} label=\"干密度\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"含水率\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'a'} label=\"体积\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={['a', 'b', 'c']} label=\"层数厚度标高\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                    <Input />\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"使用机械\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"系数\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item name={'f'} label=\"部位\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'g'} label=\"数量\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'e'} label=\"取样日期\" rules={[{ required: true }]}>\r\n                    <DatePicker format=\"YYYY-MM-DD\" />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport default memo(RingKnife);\r\n","E:\\react-study\\react-app\\src\\page\\demo\\query\\index.tsx",[],"E:\\react-study\\react-app\\src\\page\\demo\\setting\\index.tsx",["251","252","253","254","255","256"],"import React, {memo, useRef, useState} from \"react\";\r\nimport {Button, DatePicker, Form, Input, message} from \"antd\";\r\nimport {useCreated, useUpdata, useMount} from \"../../../utils/hooks\";\r\nimport {useStore} from \"../../../store/vueStore/store\";\r\nimport {Store, mutations} from \"../../../store/vueStore\";\r\n\r\nconst Setting = () => {\r\n        const formTab = useRef(null);\r\n        const [localData, localSetData] = useState<string | null>(null);\r\n\r\n        const data = useStore((store: Store) => {\r\n            const { state } = store;\r\n            const { settingData } = state;\r\n            return {\r\n                settingData\r\n            }\r\n        });\r\n\r\n        useCreated(() => {\r\n            if (formTab != null) {\r\n                const localStorageData: string | null = localStorage.getItem('setData');\r\n                // @ts-ignore\r\n                formTab.current.setFieldsValue(JSON.parse(localStorageData));\r\n                localSetData(localStorageData);\r\n            }\r\n        });\r\n\r\n        useUpdata(localData, () => {\r\n            if (formTab != null) {\r\n                if (localData !== null) {\r\n                    if (typeof localData === \"string\") {\r\n                        mutations.changeSetting(JSON.parse(localData));\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        // 提交表单\r\n        const onFinish = (values: any) => {\r\n            mutations.changeSetting(values);\r\n            localStorage.setItem('setData', JSON.stringify(values));\r\n            message.success('修改成功');\r\n        };\r\n\r\n        return (\r\n            <>\r\n                设置公共区域 --\r\n                { data.settingData.buildUnit } --\r\n                <Form {...layout} ref={ formTab } name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                    <Form.Item name={'buildUnit'} label=\"建设单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'projectName'} label=\"工程名称\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'entrustUnit'} label=\"委托单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'monitorUnit'} label=\"监测单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'constructionUnit'} label=\"施工单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'supervisionUnit'} label=\"监理单位\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'peopleDirect'} label=\"送样人\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'operator'} label=\"试验员\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'qualifiedNum'} label=\"考核合格证号\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'manufacturer'} label=\"生产厂家\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'contentIs'} label=\"内容和对情况\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={'witnessPerson'} label=\"见证人员\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default memo(Setting);\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 12 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n","E:\\react-study\\react-app\\src\\page\\test\\index.tsx",["257","258"],{"ruleId":"259","severity":1,"message":"260","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":6,"column":8,"nodeType":"261","messageId":"262","endLine":6,"endColumn":15},{"ruleId":"259","severity":1,"message":"264","line":11,"column":8,"nodeType":"261","messageId":"262","endLine":11,"endColumn":12},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":23,"column":29,"nodeType":"271","messageId":"272","endLine":23,"endColumn":68},{"ruleId":"269","severity":1,"message":"270","line":23,"column":81,"nodeType":"271","messageId":"272","endLine":23,"endColumn":120},{"ruleId":"273","severity":1,"message":"274","line":1,"column":10,"nodeType":"261","messageId":"262","endLine":1,"endColumn":20},{"ruleId":"273","severity":1,"message":"275","line":6,"column":6,"nodeType":"261","messageId":"262","endLine":6,"endColumn":14},{"ruleId":"273","severity":1,"message":"276","line":27,"column":7,"nodeType":"261","messageId":"262","endLine":27,"endColumn":20},{"ruleId":"277","severity":1,"message":"278","line":5,"column":1,"nodeType":"279","endLine":23,"endColumn":2},{"ruleId":"273","severity":1,"message":"280","line":48,"column":16,"nodeType":"261","messageId":"262","endLine":48,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":52,"column":5,"nodeType":"261","endLine":52,"endColumn":14,"suggestions":"283"},{"ruleId":"281","severity":1,"message":"284","line":66,"column":7,"nodeType":"285","endLine":66,"endColumn":9,"suggestions":"286"},{"ruleId":"281","severity":1,"message":"284","line":74,"column":7,"nodeType":"285","endLine":74,"endColumn":9,"suggestions":"287"},{"ruleId":"281","severity":1,"message":"288","line":89,"column":7,"nodeType":"261","endLine":89,"endColumn":13},{"ruleId":"281","severity":1,"message":"289","line":89,"column":7,"nodeType":"261","endLine":89,"endColumn":13,"suggestions":"290"},{"ruleId":"273","severity":1,"message":"280","line":136,"column":31,"nodeType":"261","messageId":"262","endLine":136,"endColumn":32},{"ruleId":"291","severity":1,"message":"292","line":143,"column":38,"nodeType":"293","messageId":"294","endLine":143,"endColumn":40},{"ruleId":"295","severity":1,"message":"296","line":203,"column":15,"nodeType":"297","messageId":"298","endLine":203,"endColumn":17},{"ruleId":"295","severity":1,"message":"296","line":207,"column":20,"nodeType":"297","messageId":"298","endLine":207,"endColumn":22},{"ruleId":"273","severity":1,"message":"299","line":221,"column":9,"nodeType":"261","messageId":"262","endLine":221,"endColumn":14},{"ruleId":"273","severity":1,"message":"300","line":224,"column":9,"nodeType":"261","messageId":"262","endLine":224,"endColumn":16},{"ruleId":"277","severity":1,"message":"301","line":19,"column":1,"nodeType":"279","endLine":22,"endColumn":3},{"ruleId":"273","severity":1,"message":"302","line":16,"column":14,"nodeType":"261","messageId":"262","endLine":16,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":39,"column":1,"nodeType":"261","messageId":"305","endLine":39,"endColumn":8},{"ruleId":"273","severity":1,"message":"306","line":3,"column":13,"nodeType":"261","messageId":"262","endLine":3,"endColumn":15},{"ruleId":"273","severity":1,"message":"307","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":12},{"ruleId":"273","severity":1,"message":"308","line":4,"column":14,"nodeType":"261","messageId":"262","endLine":4,"endColumn":18},{"ruleId":"273","severity":1,"message":"309","line":1,"column":22,"nodeType":"261","messageId":"262","endLine":1,"endColumn":30},{"ruleId":"295","severity":1,"message":"296","line":14,"column":22,"nodeType":"297","messageId":"298","endLine":14,"endColumn":24},{"ruleId":"265","replacedBy":"310"},{"ruleId":"267","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":74,"column":15,"nodeType":"314","messageId":"315","endLine":74,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":76,"column":16,"nodeType":"314","messageId":"315","endLine":76,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":77,"column":17,"nodeType":"314","messageId":"315","endLine":77,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":80,"column":16,"nodeType":"314","messageId":"315","endLine":80,"endColumn":60},{"ruleId":"273","severity":1,"message":"316","line":12,"column":12,"nodeType":"261","messageId":"262","endLine":12,"endColumn":17},{"ruleId":"295","severity":1,"message":"296","line":33,"column":25,"nodeType":"297","messageId":"298","endLine":33,"endColumn":27},{"ruleId":"295","severity":1,"message":"296","line":36,"column":30,"nodeType":"297","messageId":"298","endLine":36,"endColumn":32},{"ruleId":"295","severity":1,"message":"296","line":48,"column":25,"nodeType":"297","messageId":"298","endLine":48,"endColumn":27},{"ruleId":"295","severity":1,"message":"296","line":48,"column":45,"nodeType":"297","messageId":"298","endLine":48,"endColumn":47},{"ruleId":"295","severity":1,"message":"296","line":63,"column":45,"nodeType":"297","messageId":"298","endLine":63,"endColumn":47},{"ruleId":"295","severity":1,"message":"296","line":63,"column":77,"nodeType":"297","messageId":"298","endLine":63,"endColumn":79},{"ruleId":"312","severity":1,"message":"313","line":156,"column":15,"nodeType":"314","messageId":"315","endLine":156,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":158,"column":16,"nodeType":"314","messageId":"315","endLine":158,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":159,"column":17,"nodeType":"314","messageId":"315","endLine":159,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":162,"column":16,"nodeType":"314","messageId":"315","endLine":162,"endColumn":60},{"ruleId":"273","severity":1,"message":"317","line":9,"column":11,"nodeType":"261","messageId":"262","endLine":9,"endColumn":15},{"ruleId":"312","severity":1,"message":"313","line":72,"column":15,"nodeType":"314","messageId":"315","endLine":72,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":74,"column":16,"nodeType":"314","messageId":"315","endLine":74,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":75,"column":17,"nodeType":"314","messageId":"315","endLine":75,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":78,"column":16,"nodeType":"314","messageId":"315","endLine":78,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":62,"column":15,"nodeType":"314","messageId":"315","endLine":62,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":64,"column":16,"nodeType":"314","messageId":"315","endLine":64,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":65,"column":17,"nodeType":"314","messageId":"315","endLine":65,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":68,"column":16,"nodeType":"314","messageId":"315","endLine":68,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":62,"column":15,"nodeType":"314","messageId":"315","endLine":62,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":64,"column":16,"nodeType":"314","messageId":"315","endLine":64,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":65,"column":17,"nodeType":"314","messageId":"315","endLine":65,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":68,"column":16,"nodeType":"314","messageId":"315","endLine":68,"endColumn":60},{"ruleId":"273","severity":1,"message":"318","line":4,"column":8,"nodeType":"261","messageId":"262","endLine":4,"endColumn":14},{"ruleId":"273","severity":1,"message":"317","line":10,"column":11,"nodeType":"261","messageId":"262","endLine":10,"endColumn":15},{"ruleId":"312","severity":1,"message":"313","line":80,"column":15,"nodeType":"314","messageId":"315","endLine":80,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":82,"column":16,"nodeType":"314","messageId":"315","endLine":82,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":83,"column":17,"nodeType":"314","messageId":"315","endLine":83,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":86,"column":16,"nodeType":"314","messageId":"315","endLine":86,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":77,"column":15,"nodeType":"314","messageId":"315","endLine":77,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":79,"column":16,"nodeType":"314","messageId":"315","endLine":79,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":80,"column":17,"nodeType":"314","messageId":"315","endLine":80,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":83,"column":16,"nodeType":"314","messageId":"315","endLine":83,"endColumn":60},{"ruleId":"295","severity":1,"message":"296","line":17,"column":24,"nodeType":"297","messageId":"298","endLine":17,"endColumn":26},{"ruleId":"312","severity":1,"message":"313","line":74,"column":15,"nodeType":"314","messageId":"315","endLine":74,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":76,"column":16,"nodeType":"314","messageId":"315","endLine":76,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":77,"column":17,"nodeType":"314","messageId":"315","endLine":77,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":80,"column":16,"nodeType":"314","messageId":"315","endLine":80,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":78,"column":15,"nodeType":"314","messageId":"315","endLine":78,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":80,"column":16,"nodeType":"314","messageId":"315","endLine":80,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":81,"column":17,"nodeType":"314","messageId":"315","endLine":81,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":84,"column":16,"nodeType":"314","messageId":"315","endLine":84,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":78,"column":15,"nodeType":"314","messageId":"315","endLine":78,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":80,"column":16,"nodeType":"314","messageId":"315","endLine":80,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":81,"column":17,"nodeType":"314","messageId":"315","endLine":81,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":84,"column":16,"nodeType":"314","messageId":"315","endLine":84,"endColumn":60},{"ruleId":"273","severity":1,"message":"319","line":2,"column":17,"nodeType":"261","messageId":"262","endLine":2,"endColumn":27},{"ruleId":"273","severity":1,"message":"320","line":3,"column":32,"nodeType":"261","messageId":"262","endLine":3,"endColumn":40},{"ruleId":"312","severity":1,"message":"313","line":116,"column":15,"nodeType":"314","messageId":"315","endLine":116,"endColumn":38},{"ruleId":"312","severity":1,"message":"313","line":118,"column":16,"nodeType":"314","messageId":"315","endLine":118,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":119,"column":17,"nodeType":"314","messageId":"315","endLine":119,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":122,"column":16,"nodeType":"314","messageId":"315","endLine":122,"endColumn":60},{"ruleId":"273","severity":1,"message":"321","line":1,"column":22,"nodeType":"261","messageId":"262","endLine":1,"endColumn":43},{"ruleId":"273","severity":1,"message":"322","line":1,"column":45,"nodeType":"261","messageId":"262","endLine":1,"endColumn":53},"no-unused-vars","'GlobalRouter' is defined but never used.","Identifier","unusedVar","'routers' is defined but never used.","'Test' is defined but never used.","no-native-reassign",["323"],"no-negated-in-lhs",["324"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","'Selector' is defined but never used.","'useEffectBack' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'T' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBoolValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [boolValue, callback] as a second argument to the useEffect Hook.",["325"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["326"],["327"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'boolValue' and 'callback'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["328"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","Assign object to a variable before exporting as module default","'setTodos' is assigned a value but never used.","no-const-assign","'service' is constant.","const","'Rx' is defined but never used.","'of' is defined but never used.","'from' is defined but never used.","'useState' is defined but never used.",["323"],["324"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'state' is assigned a value but never used.","'time' is assigned a value but never used.","'moment' is defined but never used.","'DatePicker' is defined but never used.","'useMount' is defined but never used.","'ReactComponentElement' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"334","fix":"335"},"Add dependencies array: [boolValue, callback]",{"range":"336","text":"337"},"Update the dependencies array to be: [callback]",{"range":"338","text":"339"},{"range":"340","text":"339"},"Update the dependencies array to be: [boolValue, callback]",{"range":"341","text":"342"},[1471,1471],", [boolValue, callback]",[1623,1625],"[callback]",[1784,1786],[2185,2191],"[boolValue, callback]"]